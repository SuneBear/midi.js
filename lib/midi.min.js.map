{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///midi.min.js","webpack:///webpack/bootstrap eae07230f2a2a443761f","webpack:///./src/index.js","webpack:///./src/loader.js","webpack:///./src/utils/index.js","webpack:///./src/utils/audio-detect.js","webpack:///./src/utils/load-script.js","webpack:///./src/utils/request.js","webpack:///./src/gm.js","webpack:///./src/player.js","webpack:///./src/jasmid/index.js","webpack:///./src/jasmid/midifile.js","webpack:///./src/jasmid/_stream.js","webpack:///./src/jasmid/replayer.js","webpack:///./src/plugins/index.js","webpack:///./src/plugins/audiotag.js","webpack:///./src/plugins/webaudio.js","webpack:///./src/plugins/webmidi.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_root","_root2","window","MIDI","_typeof","Symbol","iterator","constructor","prototype","_utils","Soundfont","DEBUG","USE_XHR","soundfontUrl","loadPlugin","opts","onsuccess","audioDetect","supports","hash","location","api","substr","webmidi","AudioContext","Audio","connect","audioFormat","targetFormat","__api","__audioFormat","loadResource","instruments","instrument","i","length","GM","byId","format","WebMIDI","audiotag","requestQueue","webaudio","context","onprogress","onerror","pending","waitForEnd","instrumentId","sendRequest","evt","progress","fileProgress","queueProgress","soundfontPath","request","url","event","responseText","script","document","createElement","language","type","text","body","appendChild","loadScript","add","verify","setDefaultPlugin","midi","key","_audioDetect","keys","forEach","enumerable","get","_loadScript","_request","canPlayThrough","src","audio","mime","split","setAttribute","addEventListener","removeChild","navigator","requestMIDIAccess","isNative","Function","toString","indexOf","n","plugins","plugin","name","webkitAudioContext","canPlayType","vorbis","mpeg","time","Date","getTime","interval","setInterval","now","maxExecution","clearInterval","_globalExists","path","join","parts","object","e","LoadScript","loading","config","that","urls","doc","getElementsByTagName","testElement","element","test","getNext","hasError","batchTest","addElement","push","onreadystatechange","readyState","onload","removeTest","ret","onLoad","istrue","strictOrder","error","setTimeout","ID","data","method","headers","responseType","withCredentials","xhr","XMLHttpRequest","open","setRequestHeader","overrideMimeType","upload","total","totalBytes","lengthComputable","rawBytes","parseInt","getResponseHeader","isFinite","status","res","target","responseXML","JSON","parse","response","err","send","map","clean","replace","toLowerCase","byName","byCategory","list","num","number","category","Piano","Chromatic Percussion","Organ","Guitar","Bass","Strings","Ensemble","Brass","Reed","Pipe","Synth Lead","Synth Pad","Synth Effects","Ethnic","Percussive","Sound effects","getInstrument","channelId","channel","channels","setInstrument","program","delay","getMono","mono","setMono","truthy","getOmni","omni","setOmni","getSolo","solo","setSolo","pitchBend","mute","keyToNote","noteToKey","A0","C8","number2key","octave","_jasmid","Player","player","currentTime","endTime","restart","playing","timeWarp","startDelay","BPM","start","resume","startAudio","pause","tmp","stopAudio","stop","addListener","onMidiEvent","removeListener","undefined","clearAnimation","animationFrameId","cancelAnimationFrame","setAnimation","callback","tOurTime","tTheirTime","frame","requestAnimationFrame","minutes","seconds","t1","t2","end","events","noteRegistrar","loadMidiFile","replayer","Replayer","MidiFile","currentData","getData","getLength","console","loadFile","file","atob","fetch","t","ff","mx","scc","String","fromCharCode","z","charCodeAt","getFileInstruments","programs","subtype","programNumber","gm","queuedTime","__now","eventQueue","startTime","scheduleTracking","note","offset","message","velocity","shift","getContext","WebAudio","ctx","totalTime","getNow","performance","fromCache","messages","foffset","queueTime","setController","controllerType","programChange","noteNumber","MIDIOffset","source","noteOn","noteOff","o","pop","clearTimeout","disconnect","_midifile","_replayer","readChunk","stream","read","readInt32","readEvent","deltaTime","readVarInt","eventTypeByte","readInt8","Error","subtypeByte","readInt16","microsecondsPerBeat","hourByte","frameRate","0","32","64","96","hour","min","sec","subframe","numerator","denominator","Math","pow","metronome","thirtyseconds","scale","param1","lastEventTypeByte","eventType","amount","_stream2","headerChunk","ticksPerBeat","headerStream","formatType","trackCount","timeDivision","header","tracks","trackChunk","trackStream","eof","_stream","str","result","position","signed","b","midiFile","eventProcessor","bpm","getNextEvent","ticksToNextEvent","nextEventTrack","nextEventIndex","trackStates","nextEvent","ticksToEvent","track","beatsPerMinute","bpmOverride","midiEvent","temporal","processNext","beatsToGenerate","secondsToGenerate","clone","AudioTag","volume","bufferNid","audioBuffers","notesOn","notes","nid","playChannel","instrumentNoteId","log","play","stopChannel","len","cId","setVolume","chordOn","chord","idx","chordOff","stopAllNotes","base64ToArrayBuffer","base64","binaryString","bytes","Uint8Array","buffer","loadAudio","useStreamingBuffer","controls","autoplay","preload","decodeAudioData","createAudioContext","sources","effects","masterVolume","noteId","bufferId","createMediaElementSource","createBufferSource","chain","input","gain","destination","playbackRate","gainNode","createGain","max","linearRampToValueAtTime","sid","setEffects","tunajs","effect","setContext","newCtx","Tuna","bufferPending","requestAudio","soundfont","index","isLoaded","synth","output","cancel","errFunction","then","access","pluginOutputs","outputs"],"mappings":"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","file":"midi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MIDI\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MIDI\"] = factory();\n\telse\n\t\troot[\"MIDI\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MIDI\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MIDI\"] = factory();\n\telse\n\t\troot[\"MIDI\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(9);\n\t\n\t__webpack_require__(14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.MIDI = _root2.default;\n\texports.default = _root2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {};\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /*\n\t                                                                                                                                                                                                                                                                                ----------------------------------------------------------\n\t                                                                                                                                                                                                                                                                                root.Plugin : 0.3.4 : 2015-03-26\n\t                                                                                                                                                                                                                                                                                ----------------------------------------------------------\n\t                                                                                                                                                                                                                                                                                https://github.com/mudcube/root.js\n\t                                                                                                                                                                                                                                                                                ----------------------------------------------------------\n\t                                                                                                                                                                                                                                                                                Inspired by javax.sound.midi (albeit a super simple version):\n\t                                                                                                                                                                                                                                                                                  http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html\n\t                                                                                                                                                                                                                                                                                ----------------------------------------------------------\n\t                                                                                                                                                                                                                                                                                Technologies\n\t                                                                                                                                                                                                                                                                                ----------------------------------------------------------\n\t                                                                                                                                                                                                                                                                                  Web MIDI API - no native support yet (jazzplugin)\n\t                                                                                                                                                                                                                                                                                  Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+\n\t                                                                                                                                                                                                                                                                                  HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+\n\t                                                                                                                                                                                                                                                                                ----------------------------------------------------------\n\t                                                                                                                                                                                                                                                                              */\n\t\n\tvar _utils = __webpack_require__(4);\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_root2.default.Soundfont = {};\n\t_root2.default.DEBUG = true;\n\t_root2.default.USE_XHR = true;\n\t_root2.default.soundfontUrl = './soundfont/';\n\t\n\t/*\n\t  root.loadPlugin({\n\t    onsuccess: function() { },\n\t    onprogress: function(state, percent) { },\n\t    targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)\n\t    instrument: 'acoustic_grand_piano', // or 1 (default)\n\t    instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments\n\t  })\n\t*/\n\t\n\t_root2.default.loadPlugin = function (opts) {\n\t  if (typeof opts === 'function') {\n\t    opts = { onsuccess: opts };\n\t  }\n\t\n\t  _root2.default.soundfontUrl = opts.soundfontUrl || _root2.default.soundfontUrl;\n\t\n\t  // / Detect the best type of audio to use\n\t  (0, _utils.audioDetect)(function (supports) {\n\t    var hash = window.location.hash;\n\t    var api = '';\n\t\n\t    // / use the most appropriate plugin if not specified\n\t    if (supports[opts.api]) {\n\t      api = opts.api;\n\t    } else if (supports[hash.substr(1)]) {\n\t      api = hash.substr(1);\n\t    } else if (supports.webmidi) {\n\t      api = 'webmidi';\n\t    } else if (window.AudioContext) {\n\t      // Chrome\n\t      api = 'webaudio';\n\t    } else if (window.Audio) {\n\t      // Firefox\n\t      api = 'audiotag';\n\t    }\n\t\n\t    if (connect[api]) {\n\t      // / use audio/ogg when supported\n\t      var audioFormat = void 0;\n\t      if (opts.targetFormat) {\n\t        audioFormat = opts.targetFormat;\n\t      } else {\n\t        // use best quality\n\t        audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3';\n\t      }\n\t\n\t      // / load the specified plugin\n\t      _root2.default.__api = api;\n\t      _root2.default.__audioFormat = audioFormat;\n\t      _root2.default.supports = supports;\n\t      _root2.default.loadResource(opts);\n\t    }\n\t  });\n\t};\n\t\n\t/*\n\t  root.loadResource({\n\t    onsuccess: function() { },\n\t    onprogress: function(state, percent) { },\n\t    instrument: 'banjo'\n\t  })\n\t*/\n\t\n\t_root2.default.loadResource = function (opts) {\n\t  var instruments = opts.instruments || opts.instrument || 'acoustic_grand_piano';\n\t  // /\n\t  if ((typeof instruments === 'undefined' ? 'undefined' : _typeof(instruments)) !== 'object') {\n\t    if (instruments || instruments === 0) {\n\t      instruments = [instruments];\n\t    } else {\n\t      instruments = [];\n\t    }\n\t  }\n\t  // / convert numeric ids into strings\n\t  for (var i = 0; i < instruments.length; i++) {\n\t    var instrument = instruments[i];\n\t    if (instrument === +instrument) {\n\t      // is numeric\n\t      if (_root2.default.GM.byId[instrument]) {\n\t        instruments[i] = _root2.default.GM.byId[instrument].id;\n\t      }\n\t    }\n\t  }\n\t  // /\n\t  opts.format = _root2.default.__audioFormat;\n\t  opts.instruments = instruments;\n\t  // /\n\t  connect[_root2.default.__api](opts);\n\t};\n\t\n\tvar connect = {\n\t  webmidi: function webmidi(opts) {\n\t    // cant wait for this to be standardized!\n\t    _root2.default.WebMIDI.connect(opts);\n\t  },\n\t  audiotag: function audiotag(opts) {\n\t    // works ok, kinda like a drunken tuna fish, across the board\n\t    // http://caniuse.com/audio\n\t    requestQueue(opts, 'AudioTag');\n\t  },\n\t  webaudio: function webaudio(opts) {\n\t    // works awesome! safari, chrome and firefox support\n\t    // http://caniuse.com/web-audio\n\t    requestQueue(opts, 'WebAudio');\n\t  }\n\t};\n\t\n\tvar requestQueue = function requestQueue(opts, context) {\n\t  var audioFormat = opts.format;\n\t  var instruments = opts.instruments;\n\t  var onprogress = opts.onprogress;\n\t  var onerror = opts.onerror;\n\t  // /\n\t  var length = instruments.length;\n\t  var pending = length;\n\t  var waitForEnd = function waitForEnd() {\n\t    if (! --pending) {\n\t      onprogress && onprogress('load', 1.0);\n\t      _root2.default[context].connect(opts);\n\t    }\n\t  };\n\t  // /\n\t  for (var i = 0; i < length; i++) {\n\t    var instrumentId = instruments[i];\n\t    if (_root2.default.Soundfont[instrumentId]) {\n\t      // already loaded\n\t      waitForEnd();\n\t    } else {\n\t      // needs to be requested\n\t      sendRequest(instruments[i], audioFormat, function (evt, progress) {\n\t        var fileProgress = progress / length;\n\t        var queueProgress = (length - pending) / length;\n\t        onprogress && onprogress('load', fileProgress + queueProgress, instrumentId);\n\t      }, function () {\n\t        waitForEnd();\n\t      }, onerror);\n\t    }\n\t  }\n\t};\n\t\n\tvar sendRequest = function sendRequest(instrumentId, audioFormat, onprogress, _onsuccess, onerror) {\n\t  var soundfontPath = _root2.default.soundfontUrl + instrumentId + '-' + audioFormat + '.js';\n\t  if (_root2.default.USE_XHR) {\n\t    (0, _utils.request)({\n\t      url: soundfontPath,\n\t      format: 'text',\n\t      onerror: onerror,\n\t      onprogress: onprogress,\n\t      onsuccess: function onsuccess(event, responseText) {\n\t        var script = document.createElement('script');\n\t        script.language = 'javascript';\n\t        script.type = 'text/javascript';\n\t        script.text = responseText;\n\t        document.body.appendChild(script);\n\t        _onsuccess();\n\t      }\n\t    });\n\t  } else {\n\t    _utils.loadScript.add({\n\t      url: soundfontPath,\n\t      verify: 'root.Soundfont[\"' + instrumentId + '\"]',\n\t      onerror: onerror,\n\t      onsuccess: function onsuccess() {\n\t        _onsuccess();\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t_root2.default.setDefaultPlugin = function (midi) {\n\t  for (var key in midi) {\n\t    _root2.default[key] = midi[key];\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _audioDetect = __webpack_require__(5);\n\t\n\tObject.keys(_audioDetect).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _audioDetect[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _loadScript = __webpack_require__(6);\n\t\n\tObject.keys(_loadScript).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _loadScript[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _request = __webpack_require__(7);\n\t\n\tObject.keys(_request).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _request[key];\n\t    }\n\t  });\n\t});\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/*\n\t  ----------------------------------------------------------\n\t  midi.audioDetect : 0.3.2 : 2015-03-26\n\t  ----------------------------------------------------------\n\t  https://github.com/mudcube/midi.js\n\t  ----------------------------------------------------------\n\t  Probably, Maybe, No... Absolutely!\n\t  Test to see what types of <audio> MIME types are playable by the browser.\n\t  ----------------------------------------------------------\n\t*/\n\t\n\tvar supports = {}; // object of supported file types\n\tvar pending = 0; // pending file types to process\n\tvar canPlayThrough = function canPlayThrough(src) {\n\t  // check whether format plays through\n\t  pending++;\n\t  var body = document.body;\n\t  var audio = new window.Audio();\n\t  var mime = src.split(';')[0];\n\t  audio.id = 'audio';\n\t  audio.setAttribute('preload', 'auto');\n\t  audio.setAttribute('audiobuffer', true);\n\t  audio.addEventListener('error', function () {\n\t    body.removeChild(audio);\n\t    supports[mime] = false;\n\t    pending--;\n\t  }, false);\n\t  audio.addEventListener('canplaythrough', function () {\n\t    body.removeChild(audio);\n\t    supports[mime] = true;\n\t    pending--;\n\t  }, false);\n\t  audio.src = 'data:' + src;\n\t  body.appendChild(audio);\n\t};\n\t\n\tvar audioDetect = exports.audioDetect = function audioDetect(onsuccess) {\n\t  // / detect jazz-midi plugin\n\t  if (navigator.requestMIDIAccess) {\n\t    var isNative = Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf('[native code]');\n\t    if (isNative) {\n\t      // has native midiapi support\n\t      supports['webmidi'] = true;\n\t    } else {\n\t      // check for jazz plugin midiapi support\n\t      for (var n = 0; navigator.plugins.length > n; n++) {\n\t        var plugin = navigator.plugins[n];\n\t        if (plugin.name.indexOf('Jazz-Plugin') >= 0) {\n\t          supports['webmidi'] = true;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // / check whether <audio> tag is supported\n\t  if (typeof window.Audio === 'undefined') {\n\t    return onsuccess({});\n\t  } else {\n\t    supports['audiotag'] = true;\n\t  }\n\t\n\t  // / check for webaudio api support\n\t  if (window.AudioContext || window.webkitAudioContext) {\n\t    supports['webaudio'] = true;\n\t  }\n\t\n\t  // / check whether canPlayType is supported\n\t  var audio = new window.Audio();\n\t  if (typeof audio.canPlayType === 'undefined') {\n\t    return onsuccess(supports);\n\t  }\n\t\n\t  // / see what we can learn from the browser\n\t  var vorbis = audio.canPlayType('audio/ogg; codecs=\"vorbis\"');\n\t  vorbis = vorbis === 'probably' || vorbis === 'maybe';\n\t  var mpeg = audio.canPlayType('audio/mpeg');\n\t  mpeg = mpeg === 'probably' || mpeg === 'maybe';\n\t  // maybe nothing is supported\n\t  if (!vorbis && !mpeg) {\n\t    onsuccess(supports);\n\t    return;\n\t  }\n\t\n\t  // / or maybe something is supported\n\t  if (vorbis) canPlayThrough('audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=');\n\t  if (mpeg) canPlayThrough('audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq');\n\t\n\t  // / lets find out!\n\t  var time = new Date().getTime();\n\t  var interval = window.setInterval(function () {\n\t    var now = new Date().getTime();\n\t    var maxExecution = now - time > 5000;\n\t    if (!pending || maxExecution) {\n\t      window.clearInterval(interval);\n\t      onsuccess(supports);\n\t    }\n\t  }, 1);\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*\n\t  -----------------------------------------------------------\n\t  loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be\n\t  -----------------------------------------------------------\n\t  Copyright 2011-2014 Mudcube. All rights reserved.\n\t  -----------------------------------------------------------\n\t  /// No verification\n\t  loadScript.add(\"../js/jszip/jszip.js\")\n\t  /// Strict loading order and verification.\n\t  loadScript.add({\n\t    strictOrder: true,\n\t    urls: [\n\t      {\n\t        url: \"../js/jszip/jszip.js\",\n\t        verify: \"JSZip\",\n\t        onsuccess: function() {\n\t          console.log(1)\n\t        }\n\t      },\n\t      {\n\t        url: \"../inc/downloadify/js/swfobject.js\",\n\t        verify: \"swfobject\",\n\t        onsuccess: function() {\n\t          console.log(2)\n\t        }\n\t      }\n\t    ],\n\t    onsuccess: function() {\n\t      console.log(3)\n\t    }\n\t  })\n\t  /// Just verification.\n\t  loadScript.add({\n\t    url: \"../js/jszip/jszip.js\",\n\t    verify: \"JSZip\",\n\t    onsuccess: function() {\n\t      console.log(1)\n\t    }\n\t  })\n\t*/\n\t\n\tvar _globalExists = function _globalExists(path, root) {\n\t  try {\n\t    path = path.split('\"').join('').split(\"'\").join('').split(']').join('').split('[').join('.');\n\t    var parts = path.split('.');\n\t    var length = parts.length;\n\t    var object = root || window;\n\t    for (var n = 0; n < length; n++) {\n\t      var key = parts[n];\n\t      if (object[key] == null) {\n\t        return false;\n\t      } else {\n\t        //\n\t        object = object[key];\n\t      }\n\t    }\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t};\n\t\n\tvar LoadScript = function LoadScript() {\n\t  this.loaded = {};\n\t  this.loading = {};\n\t  return this;\n\t};\n\t\n\tLoadScript.prototype.add = function (config) {\n\t  var that = this;\n\t  if (typeof config === 'string') {\n\t    config = { url: config };\n\t  }\n\t  var urls = config.urls;\n\t  if (typeof urls === 'undefined') {\n\t    urls = [{\n\t      url: config.url,\n\t      verify: config.verify\n\t    }];\n\t  }\n\t  // / adding the elements to the head\n\t  var doc = document.getElementsByTagName('head')[0];\n\t  // /\n\t  var testElement = function testElement(element, test) {\n\t    if (that.loaded[element.url]) return;\n\t    if (test && _globalExists(test) === false) return;\n\t    that.loaded[element.url] = true;\n\t    //\n\t    if (that.loading[element.url]) that.loading[element.url]();\n\t    delete that.loading[element.url];\n\t    //\n\t    if (element.onsuccess) element.onsuccess();\n\t    if (typeof getNext !== 'undefined') getNext();\n\t  };\n\t  // /\n\t  var hasError = false;\n\t  var batchTest = [];\n\t  var addElement = function addElement(element) {\n\t    if (typeof element === 'string') {\n\t      element = {\n\t        url: element,\n\t        verify: config.verify\n\t      };\n\t    }\n\t    if (/([\\w\\d.\\[\\]'\"])$/.test(element.verify)) {\n\t      // check whether its a variable reference\n\t      var verify = element.test = element.verify;\n\t      if ((typeof verify === 'undefined' ? 'undefined' : _typeof(verify)) === 'object') {\n\t        for (var n = 0; n < verify.length; n++) {\n\t          batchTest.push(verify[n]);\n\t        }\n\t      } else {\n\t        batchTest.push(verify);\n\t      }\n\t    }\n\t    if (that.loaded[element.url]) return;\n\t    var script = document.createElement('script');\n\t    script.onreadystatechange = function () {\n\t      if (this.readyState !== 'loaded' && this.readyState !== 'complete') return;\n\t      testElement(element);\n\t    };\n\t    script.onload = function () {\n\t      testElement(element);\n\t    };\n\t    script.onerror = function () {\n\t      hasError = true;\n\t      delete that.loading[element.url];\n\t      if (_typeof(element.test) === 'object') {\n\t        for (var key in element.test) {\n\t          removeTest(element.test[key]);\n\t        }\n\t      } else {\n\t        removeTest(element.test);\n\t      }\n\t    };\n\t    script.setAttribute('type', 'text/javascript');\n\t    script.setAttribute('src', element.url);\n\t    doc.appendChild(script);\n\t    that.loading[element.url] = function () {};\n\t  };\n\t  // / checking to see whether everything loaded properly\n\t  var removeTest = function removeTest(test) {\n\t    var ret = [];\n\t    for (var n = 0; n < batchTest.length; n++) {\n\t      if (batchTest[n] === test) continue;\n\t      ret.push(batchTest[n]);\n\t    }\n\t    batchTest = ret;\n\t  };\n\t  var onLoad = function onLoad(element) {\n\t    if (element) {\n\t      testElement(element, element.test);\n\t    } else {\n\t      for (var n = 0; n < urls.length; n++) {\n\t        testElement(urls[n], urls[n].test);\n\t      }\n\t    }\n\t    var istrue = true;\n\t    for (var _n = 0; _n < batchTest.length; _n++) {\n\t      if (_globalExists(batchTest[_n]) === false) {\n\t        istrue = false;\n\t      }\n\t    }\n\t    if (!config.strictOrder && istrue) {\n\t      // finished loading all the requested scripts\n\t      if (hasError) {\n\t        if (config.error) {\n\t          config.error();\n\t        }\n\t      } else if (config.onsuccess) {\n\t        config.onsuccess();\n\t      }\n\t    } else {\n\t      // keep calling back the function\n\t      setTimeout(function () {\n\t        // - should get slower over time?\n\t        onLoad(element);\n\t      }, 10);\n\t    }\n\t  };\n\t  // / loading methods;  strict ordering or loose ordering\n\t  if (config.strictOrder) {\n\t    var ID = -1;\n\t    var getNext = function getNext() {\n\t      ID++;\n\t      if (!urls[ID]) {\n\t        // all elements are loaded\n\t        if (hasError) {\n\t          if (config.error) {\n\t            config.error();\n\t          }\n\t        } else if (config.onsuccess) {\n\t          config.onsuccess();\n\t        }\n\t      } else {\n\t        // loading new script\n\t        var element = urls[ID];\n\t        var url = element.url;\n\t        if (that.loading[url]) {\n\t          // already loading from another call (attach to event)\n\t          that.loading[url] = function () {\n\t            if (element.onsuccess) element.onsuccess();\n\t            getNext();\n\t          };\n\t        } else if (!that.loaded[url]) {\n\t          // create script element\n\t          addElement(element);\n\t          onLoad(element);\n\t        } else {\n\t          // it's already been successfully loaded\n\t          getNext();\n\t        }\n\t      }\n\t    };\n\t    getNext();\n\t  } else {\n\t    // loose ordering\n\t    for (var _ID = 0; _ID < urls.length; _ID++) {\n\t      addElement(urls[_ID]);\n\t      onLoad(urls[_ID]);\n\t    }\n\t  }\n\t};\n\t\n\tvar loadScript = exports.loadScript = new LoadScript();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.request = request;\n\t/*\n\t  ----------------------------------------------------------\n\t  Request : 0.1.1 : 2015-03-26\n\t  ----------------------------------------------------------\n\t  request({\n\t    url: './dir/something.extension',\n\t    data: 'test!',\n\t    format: 'text', // text | xml | json | binary\n\t    responseType: 'text', // arraybuffer | blob | document | json | text\n\t    headers: {},\n\t    withCredentials: true, // true | false\n\t    ///\n\t    onerror: function(evt, percent) {\n\t      console.log(evt)\n\t    },\n\t    onsuccess: function(evt, responseText) {\n\t      console.log(responseText)\n\t    },\n\t    onprogress: function(evt, percent) {\n\t      percent = Math.round(percent * 100)\n\t      loader.create('thread', 'loading... ', percent)\n\t    }\n\t  })\n\t*/\n\t\n\tfunction request(opts, onsuccess, onerror, onprogress) {\n\t  if (typeof opts === 'string') opts = { url: opts };\n\t  var data = opts.data;\n\t  var url = opts.url;\n\t  var method = opts.method || (opts.data ? 'POST' : 'GET');\n\t  var format = opts.format;\n\t  var headers = opts.headers;\n\t  var responseType = opts.responseType;\n\t  var withCredentials = opts.withCredentials || false;\n\t  var xhr = new window.XMLHttpRequest();\n\t  onsuccess = onsuccess || opts.onsuccess;\n\t  onerror = onerror || opts.onerror;\n\t  onprogress = onprogress || opts.onprogress;\n\t  xhr.open(method, url, true);\n\t  if (headers) {\n\t    for (var type in headers) {\n\t      xhr.setRequestHeader(type, headers[type]);\n\t    }\n\t  } else if (data) {\n\t    // set the default headers for POST\n\t    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\t  }\n\t  if (format === 'binary') {\n\t    // - default to responseType=\"blob\" when supported\n\t    if (xhr.overrideMimeType) {\n\t      xhr.overrideMimeType('text/plain; charset=x-user-defined');\n\t    }\n\t  }\n\t  if (responseType) {\n\t    xhr.responseType = responseType;\n\t  }\n\t  if (withCredentials) {\n\t    xhr.withCredentials = 'true';\n\t  }\n\t  if (onerror && 'onerror' in xhr) {\n\t    xhr.onerror = onerror;\n\t  }\n\t  if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n\t    if (data) {\n\t      xhr.upload.onprogress = function (evt) {\n\t        onprogress.call(xhr, evt, evt.loaded / evt.total);\n\t      };\n\t    } else {\n\t      xhr.addEventListener('progress', function (evt) {\n\t        var totalBytes = 0;\n\t        if (evt.lengthComputable) {\n\t          totalBytes = evt.total;\n\t        } else if (xhr.totalBytes) {\n\t          totalBytes = xhr.totalBytes;\n\t        } else {\n\t          var rawBytes = parseInt(xhr.getResponseHeader('Content-Length-Raw'));\n\t          if (isFinite(rawBytes)) {\n\t            xhr.totalBytes = totalBytes = rawBytes;\n\t          } else {\n\t            return;\n\t          }\n\t        }\n\t        onprogress.call(xhr, evt, evt.loaded / totalBytes);\n\t      });\n\t    }\n\t  }\n\t  // /\n\t  xhr.onreadystatechange = function (evt) {\n\t    if (xhr.readyState === 4) {\n\t      // The request is complete\n\t      if (xhr.status === 200 || // Response OK\n\t      xhr.status === 304 || // Not Modified\n\t      xhr.status === 308 // Permanent Redirect\n\t      ) {\n\t          if (onsuccess) {\n\t            var res;\n\t            if (format === 'xml') {\n\t              res = evt.target.responseXML;\n\t            } else if (format === 'text') {\n\t              res = evt.target.responseText;\n\t            } else if (format === 'json') {\n\t              try {\n\t                res = JSON.parse(evt.target.response);\n\t              } catch (err) {\n\t                onerror && onerror.call(xhr, evt);\n\t              }\n\t            }\n\t            onsuccess.call(xhr, evt, res);\n\t          }\n\t        } else {\n\t        onerror && onerror.call(xhr, evt);\n\t      }\n\t    }\n\t  };\n\t  xhr.send(data);\n\t  return xhr;\n\t}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_root2.default.GM = function (map) {\n\t  var clean = function clean(name) {\n\t    return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase();\n\t  };\n\t  var res = {\n\t    byName: {},\n\t    byId: {},\n\t    byCategory: {}\n\t  };\n\t  for (var key in map) {\n\t    var list = map[key];\n\t    for (var n = 0, length = list.length; n < length; n++) {\n\t      var instrument = list[n];\n\t      if (!instrument) continue;\n\t      var num = parseInt(instrument.substr(0, instrument.indexOf(' ')), 10);\n\t      instrument = instrument.replace(num + ' ', '');\n\t      res.byId[--num] = res.byName[clean(instrument)] = res.byCategory[clean(key)] = {\n\t        id: clean(instrument),\n\t        instrument: instrument,\n\t        number: num,\n\t        category: key\n\t      };\n\t    }\n\t  }\n\t  return res;\n\t}({\n\t  'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],\n\t  'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],\n\t  'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],\n\t  'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],\n\t  'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],\n\t  'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],\n\t  'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],\n\t  'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],\n\t  'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],\n\t  'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],\n\t  'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],\n\t  'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],\n\t  'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],\n\t  'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],\n\t  'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],\n\t  'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']\n\t});\n\t\n\t/* get/setInstrument\n\t--------------------------------------------------- */\n\t/*\n\t  ----------------------------------------------------------\n\t  GeneralMIDI\n\t  ----------------------------------------------------------\n\t*/\n\t\n\t_root2.default.getInstrument = function (channelId) {\n\t  var channel = _root2.default.channels[channelId];\n\t  return channel && channel.instrument;\n\t};\n\t\n\t_root2.default.setInstrument = function (channelId, program, delay) {\n\t  var channel = _root2.default.channels[channelId];\n\t  if (delay) {\n\t    return setTimeout(function () {\n\t      channel.instrument = program;\n\t    }, delay);\n\t  } else {\n\t    channel.instrument = program;\n\t  }\n\t};\n\t\n\t/* get/setMono\n\t--------------------------------------------------- */\n\t_root2.default.getMono = function (channelId) {\n\t  var channel = _root2.default.channels[channelId];\n\t  return channel && channel.mono;\n\t};\n\t\n\t_root2.default.setMono = function (channelId, truthy, delay) {\n\t  var channel = _root2.default.channels[channelId];\n\t  if (delay) {\n\t    return setTimeout(function () {\n\t      channel.mono = truthy;\n\t    }, delay);\n\t  } else {\n\t    channel.mono = truthy;\n\t  }\n\t};\n\t\n\t/* get/setOmni\n\t--------------------------------------------------- */\n\t_root2.default.getOmni = function (channelId) {\n\t  var channel = _root2.default.channels[channelId];\n\t  return channel && channel.omni;\n\t};\n\t\n\t_root2.default.setOmni = function (channelId, truthy, delay) {\n\t  var channel = _root2.default.channels[channelId];\n\t  if (delay) {\n\t    return setTimeout(function () {\n\t      channel.omni = truthy;\n\t    }, delay);\n\t  } else {\n\t    channel.omni = truthy;\n\t  }\n\t};\n\t\n\t/* get/setSolo\n\t--------------------------------------------------- */\n\t_root2.default.getSolo = function (channelId) {\n\t  var channel = _root2.default.channels[channelId];\n\t  return channel && channel.solo;\n\t};\n\t\n\t_root2.default.setSolo = function (channelId, truthy, delay) {\n\t  var channel = _root2.default.channels[channelId];\n\t  if (delay) {\n\t    return setTimeout(function () {\n\t      channel.solo = truthy;\n\t    }, delay);\n\t  } else {\n\t    channel.solo = truthy;\n\t  }\n\t};\n\t\n\t/* channels\n\t--------------------------------------------------- */\n\t_root2.default.channels = function () {\n\t  // 0 - 15 channels\n\t  var channels = {};\n\t  for (var i = 0; i < 16; i++) {\n\t    channels[i] = { // default values\n\t      instrument: i,\n\t      pitchBend: 0,\n\t      mute: false,\n\t      mono: false,\n\t      omni: false,\n\t      solo: false\n\t    };\n\t  }\n\t  return channels;\n\t}();\n\t\n\t/* note conversions\n\t--------------------------------------------------- */\n\t_root2.default.keyToNote = {}; // C8  == 108\n\t_root2.default.noteToKey = {}; // 108 ==  C8\n\t\n\t~function () {\n\t  var A0 = 0x15; // first note\n\t  var C8 = 0x6C; // last note\n\t  var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\t  for (var n = A0; n <= C8; n++) {\n\t    var octave = (n - 12) / 12 >> 0;\n\t    var name = number2key[n % 12] + octave;\n\t    _root2.default.keyToNote[name] = n;\n\t    _root2.default.noteToKey[n] = name;\n\t  }\n\t}();\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _jasmid = __webpack_require__(10);\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t  ----------------------------------------------------------\n\t  midi.Player : 0.3.1 : 2015-03-26\n\t  ----------------------------------------------------------\n\t  https://github.com/mudcube/midi.js\n\t  ----------------------------------------------------------\n\t*/\n\t\n\t(function () {\n\t  _root2.default.Player = {};\n\t  var player = _root2.default.Player;\n\t  player.currentTime = 0;\n\t  player.endTime = 0;\n\t  player.restart = 0;\n\t  player.playing = false;\n\t  player.timeWarp = 1;\n\t  player.startDelay = 0;\n\t  player.BPM = 120;\n\t\n\t  player.start = player.resume = function (onsuccess) {\n\t    if (player.currentTime < -1) {\n\t      player.currentTime = -1;\n\t    }\n\t    startAudio(player.currentTime, null, onsuccess);\n\t  };\n\t\n\t  player.pause = function () {\n\t    var tmp = player.restart;\n\t    stopAudio();\n\t    player.restart = tmp;\n\t  };\n\t\n\t  player.stop = function () {\n\t    stopAudio();\n\t    player.restart = 0;\n\t    player.currentTime = 0;\n\t  };\n\t\n\t  player.addListener = function (onsuccess) {\n\t    onMidiEvent = onsuccess;\n\t  };\n\t\n\t  player.removeListener = function () {\n\t    onMidiEvent = undefined;\n\t  };\n\t\n\t  player.clearAnimation = function () {\n\t    if (player.animationFrameId) {\n\t      window.cancelAnimationFrame(player.animationFrameId);\n\t    }\n\t  };\n\t\n\t  player.setAnimation = function (callback) {\n\t    var currentTime = 0;\n\t    var tOurTime = 0;\n\t    var tTheirTime = 0;\n\t    //\n\t    player.clearAnimation();\n\t    // /\n\t    var frame = function frame() {\n\t      player.animationFrameId = window.requestAnimationFrame(frame);\n\t      // /\n\t      if (player.endTime === 0) {\n\t        return;\n\t      }\n\t      if (player.playing) {\n\t        currentTime = tTheirTime === player.currentTime ? tOurTime - Date.now() : 0;\n\t        if (player.currentTime === 0) {\n\t          currentTime = 0;\n\t        } else {\n\t          currentTime = player.currentTime - currentTime;\n\t        }\n\t        if (tTheirTime !== player.currentTime) {\n\t          tOurTime = Date.now();\n\t          tTheirTime = player.currentTime;\n\t        }\n\t      } else {\n\t        // paused\n\t        currentTime = player.currentTime;\n\t      }\n\t      // /\n\t      var endTime = player.endTime;\n\t      // var percent = currentTime / endTime\n\t      var total = currentTime / 1000;\n\t      var minutes = total / 60;\n\t      var seconds = total - minutes * 60;\n\t      var t1 = minutes * 60 + seconds;\n\t      var t2 = endTime / 1000;\n\t      // /\n\t      if (t2 - t1 < -1.0) {\n\t        return;\n\t      } else {\n\t        callback({\n\t          now: t1,\n\t          end: t2,\n\t          events: noteRegistrar\n\t        });\n\t      }\n\t    };\n\t    // /\n\t    window.requestAnimationFrame(frame);\n\t  };\n\t\n\t  // helpers\n\t\n\t  player.loadMidiFile = function (onsuccess, onprogress, onerror) {\n\t    try {\n\t      // console.log(MidiFile(player.currentData), new Replayer(MidiFile(player.currentData), player.timeWarp, null, player.BPM))\n\t      player.replayer = new _jasmid.Replayer((0, _jasmid.MidiFile)(player.currentData), player.timeWarp, null, player.BPM);\n\t      player.data = player.replayer.getData();\n\t      player.endTime = getLength();\n\t      // /\n\t      _root2.default.loadPlugin({\n\t        // instruments: player.getFileInstruments(),\n\t        onsuccess: onsuccess,\n\t        onprogress: onprogress,\n\t        onerror: onerror\n\t      });\n\t    } catch (event) {\n\t      console.error(event);\n\t      onerror && onerror(event);\n\t    }\n\t  };\n\t\n\t  player.loadFile = function (file, onsuccess, onprogress, onerror) {\n\t    player.stop();\n\t    if (file.indexOf('base64,') !== -1) {\n\t      var data = window.atob(file.split(',')[1]);\n\t      player.currentData = data;\n\t      player.loadMidiFile(onsuccess, onprogress, onerror);\n\t    } else {\n\t      var fetch = new window.XMLHttpRequest();\n\t      fetch.open('GET', file);\n\t      fetch.overrideMimeType('text/plain; charset=x-user-defined');\n\t      fetch.onreadystatechange = function () {\n\t        if (this.readyState === 4) {\n\t          if (this.status === 200) {\n\t            var t = this.responseText || '';\n\t            var ff = [];\n\t            var mx = t.length;\n\t            var scc = String.fromCharCode;\n\t            for (var z = 0; z < mx; z++) {\n\t              ff[z] = scc(t.charCodeAt(z) & 255);\n\t            }\n\t            // /\n\t            var data = ff.join('');\n\t            player.currentData = data;\n\t            player.loadMidiFile(onsuccess, onprogress, onerror);\n\t          } else {\n\t            onerror && onerror('Unable to load MIDI file');\n\t          }\n\t        }\n\t      };\n\t      fetch.send();\n\t    }\n\t  };\n\t\n\t  player.getFileInstruments = function () {\n\t    var instruments = {};\n\t    var programs = {};\n\t    for (var n = 0; n < player.data.length; n++) {\n\t      var event = player.data[n][0].event;\n\t      if (event.type !== 'channel') {\n\t        continue;\n\t      }\n\t      var channel = event.channel;\n\t      switch (event.subtype) {\n\t        case 'controller':\n\t          //        console.log(event.channel, root.defineControl[event.controllerType], event.value)\n\t          break;\n\t        case 'programChange':\n\t          programs[channel] = event.programNumber;\n\t          break;\n\t        case 'noteOn':\n\t          var program = programs[channel];\n\t          var gm = _root2.default.GM.byId[isFinite(program) ? program : channel];\n\t          instruments[gm.id] = true;\n\t          break;\n\t      }\n\t    }\n\t    var ret = [];\n\t    for (var key in instruments) {\n\t      ret.push(key);\n\t    }\n\t    return ret;\n\t  };\n\t\n\t  // Playing the audio\n\t\n\t  var eventQueue = []; // hold events to be triggered\n\t  var queuedTime; //\n\t  var startTime = 0; // to measure time elapse\n\t  var noteRegistrar = {}; // get event for requested note\n\t  var onMidiEvent; // listener\n\t  var scheduleTracking = function scheduleTracking(channel, note, currentTime, offset, message, velocity, time) {\n\t    return setTimeout(function () {\n\t      var data = {\n\t        channel: channel,\n\t        note: note,\n\t        now: currentTime,\n\t        end: player.endTime,\n\t        message: message,\n\t        velocity: velocity\n\t      };\n\t      //\n\t      if (message === 128) {\n\t        delete noteRegistrar[note];\n\t      } else {\n\t        noteRegistrar[note] = data;\n\t      }\n\t      if (onMidiEvent) {\n\t        onMidiEvent(data);\n\t      }\n\t      player.currentTime = currentTime;\n\t      // /\n\t      eventQueue.shift();\n\t      // /\n\t      if (eventQueue.length < 1000) {\n\t        startAudio(queuedTime, true);\n\t      } else if (player.currentTime === queuedTime && queuedTime < player.endTime) {\n\t        // grab next sequence\n\t        startAudio(queuedTime, true);\n\t      }\n\t    }, currentTime - offset);\n\t  };\n\t\n\t  var getContext = function getContext() {\n\t    if (_root2.default.api === 'webaudio') {\n\t      return _root2.default.WebAudio.getContext();\n\t    } else {\n\t      player.ctx = { currentTime: 0 };\n\t    }\n\t    return player.ctx;\n\t  };\n\t\n\t  var getLength = function getLength() {\n\t    var data = player.data;\n\t    var length = data.length;\n\t    var totalTime = 0.5;\n\t    for (var n = 0; n < length; n++) {\n\t      totalTime += data[n][1];\n\t    }\n\t    return totalTime;\n\t  };\n\t\n\t  var __now;\n\t  var getNow = function getNow() {\n\t    if (window.performance && window.performance.now) {\n\t      return window.performance.now();\n\t    } else {\n\t      return Date.now();\n\t    }\n\t  };\n\t\n\t  var startAudio = function startAudio(currentTime, fromCache, onsuccess) {\n\t    if (!player.replayer) {\n\t      return;\n\t    }\n\t    if (!fromCache) {\n\t      if (typeof currentTime === 'undefined') {\n\t        currentTime = player.restart;\n\t      }\n\t      // /\n\t      player.playing && stopAudio();\n\t      player.playing = true;\n\t      player.data = player.replayer.getData();\n\t      player.endTime = getLength();\n\t    }\n\t    // /\n\t    var note;\n\t    var offset = 0;\n\t    var messages = 0;\n\t    var data = player.data;\n\t    var ctx = getContext();\n\t    var length = data.length;\n\t    //\n\t    queuedTime = 0.5;\n\t    // /\n\t    // var interval = eventQueue[0] && eventQueue[0].interval || 0\n\t    var foffset = currentTime - player.currentTime;\n\t    // /\n\t    if (_root2.default.api !== 'webaudio') {\n\t      // set currentTime on ctx\n\t      var now = getNow();\n\t      __now = __now || now;\n\t      ctx.currentTime = (now - __now) / 1000;\n\t    }\n\t    // /\n\t    startTime = ctx.currentTime;\n\t    // /\n\t    for (var n = 0; n < length && messages < 100; n++) {\n\t      var obj = data[n];\n\t      if ((queuedTime += obj[1]) <= currentTime) {\n\t        offset = queuedTime;\n\t        continue;\n\t      }\n\t      // /\n\t      currentTime = queuedTime - offset;\n\t      // /\n\t      var event = obj[0].event;\n\t      if (event.type !== 'channel') {\n\t        continue;\n\t      }\n\t      // /\n\t      var channelId = event.channel;\n\t      var channel = _root2.default.channels[channelId];\n\t      var delay = ctx.currentTime + (currentTime + foffset + player.startDelay) / 1000;\n\t      var queueTime = queuedTime - offset + player.startDelay;\n\t      switch (event.subtype) {\n\t        case 'controller':\n\t          _root2.default.setController(channelId, event.controllerType, event.value, delay);\n\t          break;\n\t        case 'programChange':\n\t          _root2.default.programChange(channelId, event.programNumber, delay);\n\t          break;\n\t        case 'pitchBend':\n\t          _root2.default.pitchBend(channelId, event.value, delay);\n\t          break;\n\t        case 'noteOn':\n\t          if (channel.mute) break;\n\t          note = event.noteNumber - (player.MIDIOffset || 0);\n\t          eventQueue.push({\n\t            event: event,\n\t            time: queueTime,\n\t            source: _root2.default.noteOn(channelId, event.noteNumber, event.velocity, delay),\n\t            interval: scheduleTracking(channelId, note, queuedTime + player.startDelay, offset - foffset, 144, event.velocity)\n\t          });\n\t          messages++;\n\t          break;\n\t        case 'noteOff':\n\t          if (channel.mute) break;\n\t          note = event.noteNumber - (player.MIDIOffset || 0);\n\t          eventQueue.push({\n\t            event: event,\n\t            time: queueTime,\n\t            source: _root2.default.noteOff(channelId, event.noteNumber, delay),\n\t            interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)\n\t          });\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t    // /\n\t    onsuccess && onsuccess(eventQueue);\n\t  };\n\t\n\t  var stopAudio = function stopAudio() {\n\t    var ctx = getContext();\n\t    player.playing = false;\n\t    player.restart += (ctx.currentTime - startTime) * 1000;\n\t    // stop the audio, and intervals\n\t    while (eventQueue.length) {\n\t      var o = eventQueue.pop();\n\t      window.clearInterval(o.interval);\n\t      if (!o.source) continue; // is not webaudio\n\t      if (typeof o.source === 'number') {\n\t        window.clearTimeout(o.source);\n\t      } else {\n\t        // webaudio\n\t        o.source.disconnect(0);\n\t      }\n\t    }\n\t    // run callback to cancel any notes still playing\n\t    for (var key in noteRegistrar) {\n\t      var _o = noteRegistrar[key];\n\t      if (noteRegistrar[key].message === 144 && onMidiEvent) {\n\t        onMidiEvent({\n\t          channel: _o.channel,\n\t          note: _o.note,\n\t          now: _o.now,\n\t          end: _o.end,\n\t          message: 128,\n\t          velocity: _o.velocity\n\t        });\n\t      }\n\t    }\n\t    // reset noteRegistrar\n\t    noteRegistrar = {};\n\t  };\n\t})();\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _midifile = __webpack_require__(11);\n\t\n\tObject.keys(_midifile).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _midifile[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _replayer = __webpack_require__(13);\n\t\n\tObject.keys(_replayer).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _replayer[key];\n\t    }\n\t  });\n\t});\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.MidiFile = MidiFile;\n\t\n\tvar _stream = __webpack_require__(12);\n\t\n\tvar _stream2 = _interopRequireDefault(_stream);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction MidiFile(data) {\n\t  var lastEventTypeByte;\n\t\n\t  function readChunk(stream) {\n\t    var id = stream.read(4);\n\t    var length = stream.readInt32();\n\t    return {\n\t      'id': id,\n\t      'length': length,\n\t      'data': stream.read(length)\n\t    };\n\t  }\n\t\n\t  function readEvent(stream) {\n\t    var event = {};\n\t    event.deltaTime = stream.readVarInt();\n\t    var eventTypeByte = stream.readInt8();\n\t    if ((eventTypeByte & 0xf0) === 0xf0) {\n\t      /* system / meta event */\n\t      if (eventTypeByte === 0xff) {\n\t        /* meta event */\n\t        event.type = 'meta';\n\t        var subtypeByte = stream.readInt8();\n\t        var length = stream.readVarInt();\n\t        switch (subtypeByte) {\n\t          case 0x00:\n\t            event.subtype = 'sequenceNumber';\n\t            if (length !== 2) throw new Error('Expected length for sequenceNumber event is 2, got ' + length);\n\t            event.number = stream.readInt16();\n\t            return event;\n\t          case 0x01:\n\t            event.subtype = 'text';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x02:\n\t            event.subtype = 'copyrightNotice';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x03:\n\t            event.subtype = 'trackName';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x04:\n\t            event.subtype = 'instrumentName';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x05:\n\t            event.subtype = 'lyrics';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x06:\n\t            event.subtype = 'marker';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x07:\n\t            event.subtype = 'cuePoint';\n\t            event.text = stream.read(length);\n\t            return event;\n\t          case 0x20:\n\t            event.subtype = 'midiChannelPrefix';\n\t            if (length !== 1) throw new Error('Expected length for midiChannelPrefix event is 1, got ' + length);\n\t            event.channel = stream.readInt8();\n\t            return event;\n\t          case 0x2f:\n\t            event.subtype = 'endOfTrack';\n\t            if (length !== 0) throw new Error('Expected length for endOfTrack event is 0, got ' + length);\n\t            return event;\n\t          case 0x51:\n\t            event.subtype = 'setTempo';\n\t            if (length !== 3) throw new Error('Expected length for setTempo event is 3, got ' + length);\n\t            event.microsecondsPerBeat = (stream.readInt8() << 16) + (stream.readInt8() << 8) + stream.readInt8();\n\t            return event;\n\t          case 0x54:\n\t            event.subtype = 'smpteOffset';\n\t            if (length !== 5) throw new Error('Expected length for smpteOffset event is 5, got ' + length);\n\t            var hourByte = stream.readInt8();\n\t            event.frameRate = {\n\t              0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n\t            }[hourByte & 0x60];\n\t            event.hour = hourByte & 0x1f;\n\t            event.min = stream.readInt8();\n\t            event.sec = stream.readInt8();\n\t            event.frame = stream.readInt8();\n\t            event.subframe = stream.readInt8();\n\t            return event;\n\t          case 0x58:\n\t            event.subtype = 'timeSignature';\n\t            if (length !== 4) throw new Error('Expected length for timeSignature event is 4, got ' + length);\n\t            event.numerator = stream.readInt8();\n\t            event.denominator = Math.pow(2, stream.readInt8());\n\t            event.metronome = stream.readInt8();\n\t            event.thirtyseconds = stream.readInt8();\n\t            return event;\n\t          case 0x59:\n\t            event.subtype = 'keySignature';\n\t            if (length !== 2) throw new Error('Expected length for keySignature event is 2, got ' + length);\n\t            event.key = stream.readInt8(true);\n\t            event.scale = stream.readInt8();\n\t            return event;\n\t          case 0x7f:\n\t            event.subtype = 'sequencerSpecific';\n\t            event.data = stream.read(length);\n\t            return event;\n\t          default:\n\t            // console.log(\"Unrecognised meta event subtype: \" + subtypeByte)\n\t            event.subtype = 'unknown';\n\t            event.data = stream.read(length);\n\t            return event;\n\t        }\n\t        // event.data = stream.read(length)\n\t        // return event\n\t      } else if (eventTypeByte === 0xf0) {\n\t        event.type = 'sysEx';\n\t        var _length = stream.readVarInt();\n\t        event.data = stream.read(_length);\n\t        return event;\n\t      } else if (eventTypeByte === 0xf7) {\n\t        event.type = 'dividedSysEx';\n\t        var _length2 = stream.readVarInt();\n\t        event.data = stream.read(_length2);\n\t        return event;\n\t      } else {\n\t        throw new Error('Unrecognised MIDI event type byte: ' + eventTypeByte);\n\t      }\n\t    } else {\n\t      /* channel event */\n\t      var param1;\n\t      if ((eventTypeByte & 0x80) === 0) {\n\t        /* running status - reuse lastEventTypeByte as the event type.\n\t          eventTypeByte is actually the first parameter\n\t        */\n\t        param1 = eventTypeByte;\n\t        eventTypeByte = lastEventTypeByte;\n\t      } else {\n\t        param1 = stream.readInt8();\n\t        lastEventTypeByte = eventTypeByte;\n\t      }\n\t      var eventType = eventTypeByte >> 4;\n\t      event.channel = eventTypeByte & 0x0f;\n\t      event.type = 'channel';\n\t      switch (eventType) {\n\t        case 0x08:\n\t          event.subtype = 'noteOff';\n\t          event.noteNumber = param1;\n\t          event.velocity = stream.readInt8();\n\t          return event;\n\t        case 0x09:\n\t          event.noteNumber = param1;\n\t          event.velocity = stream.readInt8();\n\t          if (event.velocity === 0) {\n\t            event.subtype = 'noteOff';\n\t          } else {\n\t            event.subtype = 'noteOn';\n\t          }\n\t          return event;\n\t        case 0x0a:\n\t          event.subtype = 'noteAftertouch';\n\t          event.noteNumber = param1;\n\t          event.amount = stream.readInt8();\n\t          return event;\n\t        case 0x0b:\n\t          event.subtype = 'controller';\n\t          event.controllerType = param1;\n\t          event.value = stream.readInt8();\n\t          return event;\n\t        case 0x0c:\n\t          event.subtype = 'programChange';\n\t          event.programNumber = param1;\n\t          return event;\n\t        case 0x0d:\n\t          event.subtype = 'channelAftertouch';\n\t          event.amount = param1;\n\t          return event;\n\t        case 0x0e:\n\t          event.subtype = 'pitchBend';\n\t          event.value = param1 + (stream.readInt8() << 7);\n\t          return event;\n\t        default:\n\t          throw new Error('Unrecognised MIDI event type: ' + eventType);\n\t        /*\n\t        console.log(\"Unrecognised MIDI event type: \" + eventType)\n\t        stream.readInt8()\n\t        event.subtype = 'unknown'\n\t        return event\n\t        */\n\t      }\n\t    }\n\t  }\n\t\n\t  var stream = (0, _stream2.default)(data);\n\t  var headerChunk = readChunk(stream);\n\t  if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n\t    throw new Error('Bad .mid file - header not found');\n\t  }\n\t  var headerStream = (0, _stream2.default)(headerChunk.data);\n\t  var formatType = headerStream.readInt16();\n\t  var trackCount = headerStream.readInt16();\n\t  var timeDivision = headerStream.readInt16();\n\t  var ticksPerBeat;\n\t\n\t  if (timeDivision & 0x8000) {\n\t    throw new Error('Expressing time division in SMTPE frames is not supported yet');\n\t  } else {\n\t    ticksPerBeat = timeDivision;\n\t  }\n\t\n\t  var header = {\n\t    'formatType': formatType,\n\t    'trackCount': trackCount,\n\t    'ticksPerBeat': ticksPerBeat\n\t  };\n\t  var tracks = [];\n\t  for (var i = 0; i < header.trackCount; i++) {\n\t    tracks[i] = [];\n\t    var trackChunk = readChunk(stream);\n\t    if (trackChunk.id !== 'MTrk') {\n\t      throw new Error('Unexpected chunk - expected MTrk, got ' + trackChunk.id);\n\t    }\n\t    var trackStream = (0, _stream2.default)(trackChunk.data);\n\t    while (!trackStream.eof()) {\n\t      var event = readEvent(trackStream);\n\t      tracks[i].push(event);\n\t      // console.log(event)\n\t    }\n\t  }\n\t\n\t  return {\n\t    'header': header,\n\t    'tracks': tracks\n\t  };\n\t} /**\n\t   * class to parse the .mid file format\n\t   * (depends on _stream.js)\n\t   */\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (str) {\n\t  var position = 0;\n\t\n\t  function read(length) {\n\t    var result = str.substr(position, length);\n\t    position += length;\n\t    return result;\n\t  }\n\t\n\t  /* read a big-endian 32-bit integer */\n\t  function readInt32() {\n\t    var result = (str.charCodeAt(position) << 24) + (str.charCodeAt(position + 1) << 16) + (str.charCodeAt(position + 2) << 8) + str.charCodeAt(position + 3);\n\t    position += 4;\n\t    return result;\n\t  }\n\t\n\t  /* read a big-endian 16-bit integer */\n\t  function readInt16() {\n\t    var result = (str.charCodeAt(position) << 8) + str.charCodeAt(position + 1);\n\t    position += 2;\n\t    return result;\n\t  }\n\t\n\t  /* read an 8-bit integer */\n\t  function readInt8(signed) {\n\t    var result = str.charCodeAt(position);\n\t    if (signed && result > 127) result -= 256;\n\t    position += 1;\n\t    return result;\n\t  }\n\t\n\t  function eof() {\n\t    return position >= str.length;\n\t  }\n\t\n\t  /* read a MIDI-style variable-length integer\n\t    (big-endian value in groups of 7 bits,\n\t    with top bit set to signify that another byte follows)\n\t  */\n\t  function readVarInt() {\n\t    var result = 0;\n\t    while (true) {\n\t      var b = readInt8();\n\t      if (b & 0x80) {\n\t        result += b & 0x7f;\n\t        result <<= 7;\n\t      } else {\n\t        /* b is the last byte */\n\t        return result + b;\n\t      }\n\t    }\n\t  }\n\t\n\t  return {\n\t    'eof': eof,\n\t    'read': read,\n\t    'readInt32': readInt32,\n\t    'readInt16': readInt16,\n\t    'readInt8': readInt8,\n\t    'readVarInt': readVarInt\n\t  };\n\t};\n\t\n\tmodule.exports = exports['default']; /* Wrapper for accessing strings through sequential reads */\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.Replayer = Replayer;\n\tvar clone = function clone(o) {\n\t  if ((typeof o === 'undefined' ? 'undefined' : _typeof(o)) !== 'object') return o;\n\t  if (o === null) return o;\n\t  var ret = typeof o.length === 'number' ? [] : {};\n\t  for (var key in o) {\n\t    ret[key] = clone(o[key]);\n\t  }return ret;\n\t};\n\t\n\tfunction Replayer(midiFile, timeWarp, eventProcessor, bpm) {\n\t  var trackStates = [];\n\t  var beatsPerMinute = bpm || 120;\n\t  var bpmOverride = !!bpm;\n\t  var ticksPerBeat = midiFile.header.ticksPerBeat;\n\t\n\t  for (var i = 0; i < midiFile.tracks.length; i++) {\n\t    trackStates[i] = {\n\t      'nextEventIndex': 0,\n\t      'ticksToNextEvent': midiFile.tracks[i].length ? midiFile.tracks[i][0].deltaTime : null\n\t    };\n\t  }\n\t\n\t  function getNextEvent() {\n\t    var ticksToNextEvent = null;\n\t    var nextEventTrack = null;\n\t    var nextEventIndex = null;\n\t\n\t    for (var _i = 0; _i < trackStates.length; _i++) {\n\t      if (trackStates[_i].ticksToNextEvent != null && (ticksToNextEvent == null || trackStates[_i].ticksToNextEvent < ticksToNextEvent)) {\n\t        ticksToNextEvent = trackStates[_i].ticksToNextEvent;\n\t        nextEventTrack = _i;\n\t        nextEventIndex = trackStates[_i].nextEventIndex;\n\t      }\n\t    }\n\t    if (nextEventTrack != null) {\n\t      /* consume event from that track */\n\t      var nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex];\n\t      if (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\n\t        trackStates[nextEventTrack].ticksToNextEvent += midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime;\n\t      } else {\n\t        trackStates[nextEventTrack].ticksToNextEvent = null;\n\t      }\n\t      trackStates[nextEventTrack].nextEventIndex += 1;\n\t      /* advance timings on all tracks by ticksToNextEvent */\n\t      for (var _i2 = 0; _i2 < trackStates.length; _i2++) {\n\t        if (trackStates[_i2].ticksToNextEvent != null) {\n\t          trackStates[_i2].ticksToNextEvent -= ticksToNextEvent;\n\t        }\n\t      }\n\t      return {\n\t        'ticksToEvent': ticksToNextEvent,\n\t        'event': nextEvent,\n\t        'track': nextEventTrack\n\t      };\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t  //\n\t  var midiEvent;\n\t  var temporal = [];\n\t  ~function processEvents() {\n\t    function processNext() {\n\t      if (!bpmOverride && midiEvent.event.type === 'meta' && midiEvent.event.subtype === 'setTempo') {\n\t        // tempo change events can occur anywhere in the middle and affect events that follow\n\t        beatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat;\n\t      }\n\t      // /\n\t      var beatsToGenerate = 0;\n\t      var secondsToGenerate = 0;\n\t      if (midiEvent.ticksToEvent > 0) {\n\t        beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;\n\t        secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);\n\t      }\n\t      // /\n\t      var time = secondsToGenerate * 1000 * timeWarp || 0;\n\t      temporal.push([midiEvent, time]);\n\t      midiEvent = getNextEvent();\n\t    }\n\t    // /\n\t    midiEvent = getNextEvent();\n\t    if (midiEvent) {\n\t      while (midiEvent) {\n\t        processNext(true);\n\t      }\n\t    }\n\t  }();\n\t\n\t  return {\n\t    getData: function getData() {\n\t      return clone(temporal);\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(15);\n\t\n\t__webpack_require__(16);\n\t\n\t__webpack_require__(17);\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.Audio && function () {\n\t  var midi = _root2.default.AudioTag = { api: 'audiotag' };\n\t  var noteToKey = {};\n\t  var volume = 127; // floating point\n\t  var bufferNid = -1; // current channel\n\t  var audioBuffers = []; // the audio channels\n\t  var notesOn = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls\n\t  var notes = {}; // the piano keys\n\t  for (var nid = 0; nid < 12; nid++) {\n\t    audioBuffers[nid] = new window.Audio();\n\t  }\n\t\n\t  var playChannel = function playChannel(channel, note) {\n\t    if (!_root2.default.channels[channel]) return;\n\t    var instrument = _root2.default.channels[channel].instrument;\n\t    var instrumentId = _root2.default.GM.byId[instrument].id;\n\t    note = notes[note];\n\t    if (note) {\n\t      var instrumentNoteId = instrumentId + '' + note.id;\n\t      var nid = (bufferNid + 1) % audioBuffers.length;\n\t      var audio = audioBuffers[nid];\n\t      notesOn[nid] = instrumentNoteId;\n\t      if (!_root2.default.Soundfont[instrumentId]) {\n\t        if (_root2.default.DEBUG) {\n\t          console.log('404', instrumentId);\n\t        }\n\t        return;\n\t      }\n\t      audio.src = _root2.default.Soundfont[instrumentId][note.id];\n\t      audio.volume = volume / 127;\n\t      audio.play();\n\t      bufferNid = nid;\n\t    }\n\t  };\n\t\n\t  var stopChannel = function stopChannel(channel, note) {\n\t    if (!_root2.default.channels[channel]) return;\n\t    var instrument = _root2.default.channels[channel].instrument;\n\t    var instrumentId = _root2.default.GM.byId[instrument].id;\n\t    note = notes[note];\n\t    if (note) {\n\t      var instrumentNoteId = instrumentId + '' + note.id;\n\t      for (var i = 0, len = audioBuffers.length; i < len; i++) {\n\t        var nid = (i + bufferNid + 1) % len;\n\t        var cId = notesOn[nid];\n\t        if (cId && cId === instrumentNoteId) {\n\t          audioBuffers[nid].pause();\n\t          notesOn[nid] = null;\n\t          return;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  midi.audioBuffers = audioBuffers;\n\t  midi.send = function (data, delay) {};\n\t  midi.setController = function (channel, type, value, delay) {};\n\t  midi.setVolume = function (channel, n) {\n\t    volume = n; // - should be channel specific volume\n\t  };\n\t\n\t  midi.programChange = function (channel, program) {\n\t    _root2.default.channels[channel].instrument = program;\n\t  };\n\t\n\t  midi.pitchBend = function (channel, program, delay) {};\n\t\n\t  midi.noteOn = function (channel, note, velocity, delay) {\n\t    var id = noteToKey[note];\n\t    if (!notes[id]) return;\n\t    if (delay) {\n\t      return setTimeout(function () {\n\t        playChannel(channel, id);\n\t      }, delay * 1000);\n\t    } else {\n\t      playChannel(channel, id);\n\t    }\n\t  };\n\t\n\t  midi.noteOff = function (channel, note, delay) {\n\t    //      var id = noteToKey[note]\n\t    //      if (!notes[id]) return\n\t    //      if (delay) {\n\t    //        return setTimeout(function() {\n\t    //          stopChannel(channel, id)\n\t    //        }, delay * 1000)\n\t    //      } else {\n\t    //        stopChannel(channel, id)\n\t    //      }\n\t  };\n\t\n\t  midi.chordOn = function (channel, chord, velocity, delay) {\n\t    for (var idx = 0; idx < chord.length; idx++) {\n\t      var n = chord[idx];\n\t      var id = noteToKey[n];\n\t      if (!notes[id]) continue;\n\t      if (delay) {\n\t        return setTimeout(function () {\n\t          playChannel(channel, id);\n\t        }, delay * 1000);\n\t      } else {\n\t        playChannel(channel, id);\n\t      }\n\t    }\n\t  };\n\t\n\t  midi.chordOff = function (channel, chord, delay) {\n\t    for (var idx = 0; idx < chord.length; idx++) {\n\t      var n = chord[idx];\n\t      var id = noteToKey[n];\n\t      if (!notes[id]) continue;\n\t      if (delay) {\n\t        return setTimeout(function () {\n\t          stopChannel(channel, id);\n\t        }, delay * 1000);\n\t      } else {\n\t        stopChannel(channel, id);\n\t      }\n\t    }\n\t  };\n\t\n\t  midi.stopAllNotes = function () {\n\t    for (var nid = 0, length = audioBuffers.length; nid < length; nid++) {\n\t      audioBuffers[nid].pause();\n\t    }\n\t  };\n\t\n\t  midi.connect = function (opts) {\n\t    _root2.default.setDefaultPlugin(midi);\n\t    // /\n\t    for (var key in _root2.default.keyToNote) {\n\t      noteToKey[_root2.default.keyToNote[key]] = key;\n\t      notes[key] = { id: key };\n\t    }\n\t    // /\n\t    opts.onsuccess && opts.onsuccess();\n\t  };\n\t}(); /*\n\t       ----------------------------------------------------------------------\n\t       AudioTag <audio> - OGG or MPEG Soundbank\n\t       ----------------------------------------------------------------------\n\t       http://dev.w3.org/html5/spec/Overview.html#the-audio-element\n\t       ----------------------------------------------------------------------\n\t     */\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// REF: http://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer\n\tfunction base64ToArrayBuffer(base64) {\n\t  var binaryString = window.atob(base64);\n\t  var len = binaryString.length;\n\t  var bytes = new Uint8Array(len);\n\t  for (var i = 0; i < len; i++) {\n\t    bytes[i] = binaryString.charCodeAt(i);\n\t  }\n\t  return bytes.buffer;\n\t} /*\n\t    ----------------------------------------------------------\n\t    Web Audio API - OGG or MPEG Soundbank\n\t    ----------------------------------------------------------\n\t    http://webaudio.github.io/web-audio-api/\n\t    ----------------------------------------------------------\n\t  */\n\t\n\t\n\twindow.AudioContext && function () {\n\t  // var audioContext = null // new AudioContext()\n\t  var useStreamingBuffer = false; // !!audioContext.createMediaElementSource\n\t  var midi = _root2.default.WebAudio = { api: 'webaudio' };\n\t  var ctx; // audio context\n\t  var sources = {};\n\t  var effects = {};\n\t  var masterVolume = 127;\n\t  var audioBuffers = {};\n\t  // /\n\t  midi.audioBuffers = audioBuffers;\n\t  midi.send = function (data, delay) {};\n\t  midi.setController = function (channelId, type, value, delay) {};\n\t\n\t  midi.setVolume = function (channelId, volume, delay) {\n\t    if (delay) {\n\t      setTimeout(function () {\n\t        masterVolume = volume;\n\t      }, delay * 1000);\n\t    } else {\n\t      masterVolume = volume;\n\t    }\n\t  };\n\t\n\t  midi.programChange = function (channelId, program, delay) {\n\t    //      if (delay) {\n\t    //        return setTimeout(function() {\n\t    //          var channel = root.channels[channelId]\n\t    //          channel.instrument = program\n\t    //        }, delay)\n\t    //      } else {\n\t    var channel = _root2.default.channels[channelId];\n\t    channel.instrument = program;\n\t    //      }\n\t  };\n\t\n\t  midi.pitchBend = function (channelId, program, delay) {\n\t    //      if (delay) {\n\t    //        setTimeout(function() {\n\t    //          var channel = root.channels[channelId]\n\t    //          channel.pitchBend = program\n\t    //        }, delay)\n\t    //      } else {\n\t    var channel = _root2.default.channels[channelId];\n\t    channel.pitchBend = program;\n\t    //      }\n\t  };\n\t\n\t  midi.noteOn = function (channelId, noteId, velocity, delay) {\n\t    delay = delay || 0;\n\t\n\t    // / check whether the note exists\n\t    var channel = _root2.default.channels[channelId];\n\t    var instrument = channel.instrument;\n\t    var bufferId = instrument + '' + noteId;\n\t    var buffer = audioBuffers[bufferId];\n\t    if (!buffer) {\n\t      //        console.log(midi.GM.byId[instrument].id, instrument, channelId)\n\t      return;\n\t    }\n\t\n\t    // / convert relative delay to absolute delay\n\t    if (delay < ctx.currentTime) {\n\t      delay += ctx.currentTime;\n\t    }\n\t\n\t    // / create audio buffer\n\t    var source;\n\t    if (useStreamingBuffer) {\n\t      source = ctx.createMediaElementSource(buffer);\n\t    } else {\n\t      // XMLHTTP buffer\n\t      source = ctx.createBufferSource();\n\t      source.buffer = buffer;\n\t    }\n\t\n\t    // / add effects to buffer\n\t    if (effects) {\n\t      var chain = source;\n\t      for (var key in effects) {\n\t        chain.connect(effects[key].input);\n\t        chain = effects[key];\n\t      }\n\t    }\n\t\n\t    // / add gain + pitchShift\n\t    var gain = velocity / 127 * (masterVolume / 127) * 2 - 1;\n\t    source.connect(ctx.destination);\n\t    source.playbackRate.value = 1; // pitch shift\n\t    source.gainNode = ctx.createGain(); // gain\n\t    source.gainNode.connect(ctx.destination);\n\t    source.gainNode.gain.value = Math.min(1.0, Math.max(-1.0, gain));\n\t    source.connect(source.gainNode);\n\t    // /\n\t    if (useStreamingBuffer) {\n\t      if (delay) {\n\t        return setTimeout(function () {\n\t          buffer.currentTime = 0;\n\t          buffer.play();\n\t        }, delay * 1000);\n\t      } else {\n\t        buffer.currentTime = 0;\n\t        buffer.play();\n\t      }\n\t    } else {\n\t      source.start(delay || 0);\n\t    }\n\t    // /\n\t    sources[channelId + '' + noteId] = source;\n\t    // /\n\t    return source;\n\t  };\n\t\n\t  midi.noteOff = function (channelId, noteId, delay) {\n\t    delay = delay || 0;\n\t\n\t    // / check whether the note exists\n\t    var channel = _root2.default.channels[channelId];\n\t    var instrument = channel.instrument;\n\t    var bufferId = instrument + '' + noteId;\n\t    var buffer = audioBuffers[bufferId];\n\t    if (buffer) {\n\t      if (delay < ctx.currentTime) {\n\t        delay += ctx.currentTime;\n\t      }\n\t      // /\n\t      var source = sources[channelId + '' + noteId];\n\t      if (source) {\n\t        if (source.gainNode) {\n\t          // @Miranet: 'the values of 0.2 and 0.3 could of course be used as\n\t          // a 'release' parameter for ADSR like time settings.'\n\t          // add { 'metadata': { release: 0.3 } } to soundfont files\n\t          var gain = source.gainNode.gain;\n\t          gain.linearRampToValueAtTime(gain.value, delay);\n\t          gain.linearRampToValueAtTime(-1.0, delay + 0.3);\n\t        }\n\t        // /\n\t        if (useStreamingBuffer) {\n\t          if (delay) {\n\t            setTimeout(function () {\n\t              buffer.pause();\n\t            }, delay * 1000);\n\t          } else {\n\t            buffer.pause();\n\t          }\n\t        } else {\n\t          if (source.noteOff) {\n\t            source.noteOff(delay + 0.5);\n\t          } else {\n\t            source.stop(delay + 0.5);\n\t          }\n\t        }\n\t        // /\n\t        delete sources[channelId + '' + noteId];\n\t        // /\n\t        return source;\n\t      }\n\t    }\n\t  };\n\t\n\t  midi.chordOn = function (channel, chord, velocity, delay) {\n\t    var res = {};\n\t    for (var n = 0, note, len = chord.length; n < len; n++) {\n\t      res[note = chord[n]] = midi.noteOn(channel, note, velocity, delay);\n\t    }\n\t    return res;\n\t  };\n\t\n\t  midi.chordOff = function (channel, chord, delay) {\n\t    var res = {};\n\t    for (var n = 0, note, len = chord.length; n < len; n++) {\n\t      res[note = chord[n]] = midi.noteOff(channel, note, delay);\n\t    }\n\t    return res;\n\t  };\n\t\n\t  midi.stopAllNotes = function () {\n\t    for (var sid in sources) {\n\t      var delay = 0;\n\t      if (delay < ctx.currentTime) {\n\t        delay += ctx.currentTime;\n\t      }\n\t      var source = sources[sid];\n\t      source.gain.linearRampToValueAtTime(1, delay);\n\t      source.gain.linearRampToValueAtTime(0, delay + 0.3);\n\t      if (source.noteOff) {\n\t        // old api\n\t        source.noteOff(delay + 0.3);\n\t      } else {\n\t        // new api\n\t        source.stop(delay + 0.3);\n\t      }\n\t      delete sources[sid];\n\t    }\n\t  };\n\t\n\t  midi.setEffects = function (list) {\n\t    if (ctx.tunajs) {\n\t      for (var n = 0; n < list.length; n++) {\n\t        var data = list[n];\n\t        var effect = new ctx.tunajs[data.type](data);\n\t        effect.connect(ctx.destination);\n\t        effects[data.type] = effect;\n\t      }\n\t    } else {\n\t      return console.log('Effects module not installed.');\n\t    }\n\t  };\n\t\n\t  midi.connect = function (opts) {\n\t    _root2.default.setDefaultPlugin(midi);\n\t    midi.setContext(ctx || createAudioContext(), opts.onsuccess);\n\t  };\n\t\n\t  midi.getContext = function () {\n\t    return ctx;\n\t  };\n\t\n\t  midi.setContext = function (newCtx, onload, onprogress, onerror) {\n\t    ctx = newCtx;\n\t\n\t    // / tuna.js effects module - https://github.com/Dinahmoe/tuna\n\t    if (typeof window.Tuna !== 'undefined' && !ctx.tunajs) {\n\t      ctx.tunajs = new window.Tuna(ctx);\n\t    }\n\t\n\t    // / loading audio files\n\t    var urls = [];\n\t    var notes = _root2.default.keyToNote;\n\t    for (var key in notes) {\n\t      urls.push(key);\n\t    } // /\n\t    var waitForEnd = function waitForEnd(instrument) {\n\t      for (var _key in bufferPending) {\n\t        // has pending items\n\t        if (bufferPending[_key]) return;\n\t      }\n\t      // /\n\t      if (onload) {\n\t        // run onload once\n\t        onload();\n\t        onload = null;\n\t      }\n\t    };\n\t    // /\n\t    var requestAudio = function requestAudio(soundfont, instrumentId, index, key) {\n\t      var url = soundfont[key];\n\t      if (url) {\n\t        bufferPending[instrumentId]++;\n\t        loadAudio(url, function (buffer) {\n\t          buffer.id = key;\n\t          var noteId = _root2.default.keyToNote[key];\n\t          audioBuffers[instrumentId + '' + noteId] = buffer;\n\t          // /\n\t          if (--bufferPending[instrumentId] === 0) {\n\t            // var percent = index / 87\n\t            //              console.log(midi.GM.byId[instrumentId], 'processing: ', percent)\n\t            soundfont.isLoaded = true;\n\t            waitForEnd(instrument);\n\t          }\n\t        }, function (err) {\n\t          console.error(err);\n\t        });\n\t      }\n\t    };\n\t    // /\n\t    var bufferPending = {};\n\t    for (var instrument in _root2.default.Soundfont) {\n\t      var soundfont = _root2.default.Soundfont[instrument];\n\t      if (soundfont.isLoaded) {\n\t        continue;\n\t      }\n\t      // /\n\t      var synth = _root2.default.GM.byName[instrument];\n\t      var instrumentId = synth.number;\n\t      // /\n\t      bufferPending[instrumentId] = 0;\n\t      // /\n\t      for (var index = 0; index < urls.length; index++) {\n\t        var _key2 = urls[index];\n\t        requestAudio(soundfont, instrumentId, index, _key2);\n\t      }\n\t    }\n\t    // /\n\t    setTimeout(waitForEnd, 1);\n\t  };\n\t\n\t  /* Load audio file: streaming | base64 | arraybuffer\n\t  ---------------------------------------------------------------------- */\n\t  function loadAudio(url, onload, onerror) {\n\t    if (useStreamingBuffer) {\n\t      var audio = new window.Audio();\n\t      audio.src = url;\n\t      audio.controls = false;\n\t      audio.autoplay = false;\n\t      audio.preload = false;\n\t      audio.addEventListener('canplay', function () {\n\t        onload && onload(audio);\n\t      });\n\t      audio.addEventListener('error', function (err) {\n\t        onerror && onerror(err);\n\t      });\n\t      document.body.appendChild(audio);\n\t    } else if (url.indexOf('data:audio') === 0) {\n\t      // Base64 string\n\t      var base64 = url.split(',')[1];\n\t      var buffer = base64ToArrayBuffer(base64);\n\t      ctx.decodeAudioData(buffer, onload, onerror);\n\t    } else {\n\t      // XMLHTTP buffer\n\t      var request = new window.XMLHttpRequest();\n\t      request.open('GET', url, true);\n\t      request.responseType = 'arraybuffer';\n\t      request.onload = function () {\n\t        ctx.decodeAudioData(request.response, onload, onerror);\n\t      };\n\t      request.send();\n\t    }\n\t  }\n\t\n\t  function createAudioContext() {\n\t    return new (window.AudioContext || window.webkitAudioContext)();\n\t  }\n\t}();\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _root = __webpack_require__(2);\n\t\n\tvar _root2 = _interopRequireDefault(_root);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function () {\n\t  var plugin = null;\n\t  var output = null;\n\t  var midi = _root2.default.WebMIDI = { api: 'webmidi' };\n\t  midi.send = function (data, delay) {\n\t    // set channel volume\n\t    output.send(data, delay * 1000);\n\t  };\n\t\n\t  midi.setController = function (channel, type, value, delay) {\n\t    output.send([channel, type, value], delay * 1000);\n\t  };\n\t\n\t  midi.setVolume = function (channel, volume, delay) {\n\t    // set channel volume\n\t    output.send([0xB0 + channel, 0x07, volume], delay * 1000);\n\t  };\n\t\n\t  midi.programChange = function (channel, program, delay) {\n\t    // change patch (instrument)\n\t    output.send([0xC0 + channel, program], delay * 1000);\n\t  };\n\t\n\t  midi.pitchBend = function (channel, program, delay) {\n\t    // pitch bend\n\t    output.send([0xE0 + channel, program], delay * 1000);\n\t  };\n\t\n\t  midi.noteOn = function (channel, note, velocity, delay) {\n\t    output.send([0x90 + channel, note, velocity], delay * 1000);\n\t  };\n\t\n\t  midi.noteOff = function (channel, note, delay) {\n\t    output.send([0x80 + channel, note, 0], delay * 1000);\n\t  };\n\t\n\t  midi.chordOn = function (channel, chord, velocity, delay) {\n\t    for (var n = 0; n < chord.length; n++) {\n\t      var note = chord[n];\n\t      output.send([0x90 + channel, note, velocity], delay * 1000);\n\t    }\n\t  };\n\t\n\t  midi.chordOff = function (channel, chord, delay) {\n\t    for (var n = 0; n < chord.length; n++) {\n\t      var note = chord[n];\n\t      output.send([0x80 + channel, note, 0], delay * 1000);\n\t    }\n\t  };\n\t\n\t  midi.stopAllNotes = function () {\n\t    output.cancel();\n\t    for (var channel = 0; channel < 16; channel++) {\n\t      output.send([0xB0 + channel, 0x7B, 0]);\n\t    }\n\t  };\n\t\n\t  midi.connect = function (opts) {\n\t    _root2.default.setDefaultPlugin(midi);\n\t    var errFunction = function errFunction(err) {\n\t      // well at least we tried!\n\t      if (window.AudioContext) {\n\t        // Chrome\n\t        opts.api = 'webaudio';\n\t      } else if (window.Audio) {\n\t        // Firefox\n\t        opts.api = 'audiotag';\n\t      } else {\n\t        // no support\n\t        return err;\n\t      }\n\t      _root2.default.loadPlugin(opts);\n\t    };\n\t    // /\n\t    navigator.requestMIDIAccess().then(function (access) {\n\t      plugin = access;\n\t      var pluginOutputs = plugin.outputs;\n\t      if (typeof pluginOutputs === 'function') {\n\t        // Chrome pre-43\n\t        output = pluginOutputs()[0];\n\t      } else {\n\t        // Chrome post-43\n\t        output = pluginOutputs[0];\n\t      }\n\t      if (output === undefined) {\n\t        // nothing there...\n\t        errFunction();\n\t      } else {\n\t        opts.onsuccess && opts.onsuccess();\n\t      }\n\t    }, errFunction);\n\t  };\n\t})(); /*\n\t        ----------------------------------------------------------------------\n\t        Web MIDI API - Native Soundbanks\n\t        ----------------------------------------------------------------------\n\t        http://webaudio.github.io/web-midi-api/\n\t        ----------------------------------------------------------------------\n\t      */\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** midi.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap eae07230f2a2a443761f\n **/","import root from './root'\nimport './loader'\nimport './gm'\nimport './player'\nimport './plugins'\n\nwindow.MIDI = root\nexport default root\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/index.js\n **/","/*\n  ----------------------------------------------------------\n  root.Plugin : 0.3.4 : 2015-03-26\n  ----------------------------------------------------------\n  https://github.com/mudcube/root.js\n  ----------------------------------------------------------\n  Inspired by javax.sound.midi (albeit a super simple version):\n    http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html\n  ----------------------------------------------------------\n  Technologies\n  ----------------------------------------------------------\n    Web MIDI API - no native support yet (jazzplugin)\n    Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+\n    HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+\n  ----------------------------------------------------------\n*/\n\nimport { audioDetect, loadScript, request } from './utils'\nimport root from './root'\n\nroot.Soundfont = {}\nroot.DEBUG = true\nroot.USE_XHR = true\nroot.soundfontUrl = './soundfont/'\n\n/*\n  root.loadPlugin({\n    onsuccess: function() { },\n    onprogress: function(state, percent) { },\n    targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)\n    instrument: 'acoustic_grand_piano', // or 1 (default)\n    instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments\n  })\n*/\n\nroot.loadPlugin = function (opts) {\n  if (typeof opts === 'function') {\n    opts = {onsuccess: opts}\n  }\n\n  root.soundfontUrl = opts.soundfontUrl || root.soundfontUrl\n\n  // / Detect the best type of audio to use\n  audioDetect(function (supports) {\n    var hash = window.location.hash\n    var api = ''\n\n    // / use the most appropriate plugin if not specified\n    if (supports[opts.api]) {\n      api = opts.api\n    } else if (supports[hash.substr(1)]) {\n      api = hash.substr(1)\n    } else if (supports.webmidi) {\n      api = 'webmidi'\n    } else if (window.AudioContext) { // Chrome\n      api = 'webaudio'\n    } else if (window.Audio) { // Firefox\n      api = 'audiotag'\n    }\n\n    if (connect[api]) {\n      // / use audio/ogg when supported\n      let audioFormat\n      if (opts.targetFormat) {\n        audioFormat = opts.targetFormat\n      } else { // use best quality\n        audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3'\n      }\n\n      // / load the specified plugin\n      root.__api = api\n      root.__audioFormat = audioFormat\n      root.supports = supports\n      root.loadResource(opts)\n    }\n  })\n}\n\n/*\n  root.loadResource({\n    onsuccess: function() { },\n    onprogress: function(state, percent) { },\n    instrument: 'banjo'\n  })\n*/\n\nroot.loadResource = function (opts) {\n  var instruments = opts.instruments || opts.instrument || 'acoustic_grand_piano'\n  // /\n  if (typeof instruments !== 'object') {\n    if (instruments || instruments === 0) {\n      instruments = [instruments]\n    } else {\n      instruments = []\n    }\n  }\n  // / convert numeric ids into strings\n  for (var i = 0; i < instruments.length; i++) {\n    var instrument = instruments[i]\n    if (instrument === +instrument) { // is numeric\n      if (root.GM.byId[instrument]) {\n        instruments[i] = root.GM.byId[instrument].id\n      }\n    }\n  }\n  // /\n  opts.format = root.__audioFormat\n  opts.instruments = instruments\n  // /\n  connect[root.__api](opts)\n}\n\nvar connect = {\n  webmidi: function (opts) {\n    // cant wait for this to be standardized!\n    root.WebMIDI.connect(opts)\n  },\n  audiotag: function (opts) {\n    // works ok, kinda like a drunken tuna fish, across the board\n    // http://caniuse.com/audio\n    requestQueue(opts, 'AudioTag')\n  },\n  webaudio: function (opts) {\n    // works awesome! safari, chrome and firefox support\n    // http://caniuse.com/web-audio\n    requestQueue(opts, 'WebAudio')\n  }\n}\n\nvar requestQueue = function (opts, context) {\n  var audioFormat = opts.format\n  var instruments = opts.instruments\n  var onprogress = opts.onprogress\n  var onerror = opts.onerror\n  // /\n  var length = instruments.length\n  var pending = length\n  var waitForEnd = function () {\n    if (!--pending) {\n      onprogress && onprogress('load', 1.0)\n      root[context].connect(opts)\n    }\n  }\n  // /\n  for (var i = 0; i < length; i++) {\n    var instrumentId = instruments[i]\n    if (root.Soundfont[instrumentId]) { // already loaded\n      waitForEnd()\n    } else { // needs to be requested\n      sendRequest(instruments[i], audioFormat, function (evt, progress) {\n        var fileProgress = progress / length\n        var queueProgress = (length - pending) / length\n        onprogress && onprogress('load', fileProgress + queueProgress, instrumentId)\n      }, function () {\n        waitForEnd()\n      }, onerror)\n    }\n  }\n}\n\nvar sendRequest = function (instrumentId, audioFormat, onprogress, onsuccess, onerror) {\n  var soundfontPath = root.soundfontUrl + instrumentId + '-' + audioFormat + '.js'\n  if (root.USE_XHR) {\n    request({\n      url: soundfontPath,\n      format: 'text',\n      onerror: onerror,\n      onprogress: onprogress,\n      onsuccess: function (event, responseText) {\n        var script = document.createElement('script')\n        script.language = 'javascript'\n        script.type = 'text/javascript'\n        script.text = responseText\n        document.body.appendChild(script)\n        onsuccess()\n      }\n    })\n  } else {\n    loadScript.add({\n      url: soundfontPath,\n      verify: 'root.Soundfont[\"' + instrumentId + '\"]',\n      onerror: onerror,\n      onsuccess: function () {\n        onsuccess()\n      }\n    })\n  }\n}\n\nroot.setDefaultPlugin = function (midi) {\n  for (var key in midi) {\n    root[key] = midi[key]\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/loader.js\n **/","export * from './audio-detect'\nexport * from './load-script'\nexport * from './request'\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/utils/index.js\n **/","/*\n  ----------------------------------------------------------\n  midi.audioDetect : 0.3.2 : 2015-03-26\n  ----------------------------------------------------------\n  https://github.com/mudcube/midi.js\n  ----------------------------------------------------------\n  Probably, Maybe, No... Absolutely!\n  Test to see what types of <audio> MIME types are playable by the browser.\n  ----------------------------------------------------------\n*/\n\nconst supports = {} // object of supported file types\nlet pending = 0 // pending file types to process\nconst canPlayThrough = function (src) { // check whether format plays through\n  pending++\n  const body = document.body\n  const audio = new window.Audio()\n  const mime = src.split(';')[0]\n  audio.id = 'audio'\n  audio.setAttribute('preload', 'auto')\n  audio.setAttribute('audiobuffer', true)\n  audio.addEventListener('error', function () {\n    body.removeChild(audio)\n    supports[mime] = false\n    pending--\n  }, false)\n  audio.addEventListener('canplaythrough', function () {\n    body.removeChild(audio)\n    supports[mime] = true\n    pending--\n  }, false)\n  audio.src = 'data:' + src\n  body.appendChild(audio)\n}\n\nexport const audioDetect = function (onsuccess) {\n  // / detect jazz-midi plugin\n  if (navigator.requestMIDIAccess) {\n    const isNative = Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf('[native code]')\n    if (isNative) { // has native midiapi support\n      supports['webmidi'] = true\n    } else { // check for jazz plugin midiapi support\n      for (let n = 0; navigator.plugins.length > n; n++) {\n        const plugin = navigator.plugins[n]\n        if (plugin.name.indexOf('Jazz-Plugin') >= 0) {\n          supports['webmidi'] = true\n        }\n      }\n    }\n  }\n\n  // / check whether <audio> tag is supported\n  if (typeof (window.Audio) === 'undefined') {\n    return onsuccess({})\n  } else {\n    supports['audiotag'] = true\n  }\n\n  // / check for webaudio api support\n  if (window.AudioContext || window.webkitAudioContext) {\n    supports['webaudio'] = true\n  }\n\n  // / check whether canPlayType is supported\n  const audio = new window.Audio()\n  if (typeof (audio.canPlayType) === 'undefined') {\n    return onsuccess(supports)\n  }\n\n  // / see what we can learn from the browser\n  let vorbis = audio.canPlayType('audio/ogg; codecs=\"vorbis\"')\n  vorbis = (vorbis === 'probably' || vorbis === 'maybe')\n  let mpeg = audio.canPlayType('audio/mpeg')\n  mpeg = (mpeg === 'probably' || mpeg === 'maybe')\n  // maybe nothing is supported\n  if (!vorbis && !mpeg) {\n    onsuccess(supports)\n    return\n  }\n\n  // / or maybe something is supported\n  if (vorbis) canPlayThrough('audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=')\n  if (mpeg) canPlayThrough('audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq')\n\n  // / lets find out!\n  const time = (new Date()).getTime()\n  let interval = window.setInterval(function () {\n    const now = (new Date()).getTime()\n    const maxExecution = now - time > 5000\n    if (!pending || maxExecution) {\n      window.clearInterval(interval)\n      onsuccess(supports)\n    }\n  }, 1)\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/utils/audio-detect.js\n **/","/*\n  -----------------------------------------------------------\n  loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be\n  -----------------------------------------------------------\n  Copyright 2011-2014 Mudcube. All rights reserved.\n  -----------------------------------------------------------\n  /// No verification\n  loadScript.add(\"../js/jszip/jszip.js\")\n  /// Strict loading order and verification.\n  loadScript.add({\n    strictOrder: true,\n    urls: [\n      {\n        url: \"../js/jszip/jszip.js\",\n        verify: \"JSZip\",\n        onsuccess: function() {\n          console.log(1)\n        }\n      },\n      {\n        url: \"../inc/downloadify/js/swfobject.js\",\n        verify: \"swfobject\",\n        onsuccess: function() {\n          console.log(2)\n        }\n      }\n    ],\n    onsuccess: function() {\n      console.log(3)\n    }\n  })\n  /// Just verification.\n  loadScript.add({\n    url: \"../js/jszip/jszip.js\",\n    verify: \"JSZip\",\n    onsuccess: function() {\n      console.log(1)\n    }\n  })\n*/\n\nconst _globalExists = function (path, root) {\n  try {\n    path = path.split('\"').join('').split(\"'\").join('').split(']').join('').split('[').join('.')\n    var parts = path.split('.')\n    var length = parts.length\n    var object = root || window\n    for (var n = 0; n < length; n++) {\n      var key = parts[n]\n      if (object[key] == null) {\n        return false\n      } else { //\n        object = object[key]\n      }\n    }\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nconst LoadScript = function () {\n  this.loaded = {}\n  this.loading = {}\n  return this\n}\n\nLoadScript.prototype.add = function (config) {\n  var that = this\n  if (typeof (config) === 'string') {\n    config = { url: config }\n  }\n  var urls = config.urls\n  if (typeof (urls) === 'undefined') {\n    urls = [{\n      url: config.url,\n      verify: config.verify\n    }]\n  }\n  // / adding the elements to the head\n  var doc = document.getElementsByTagName('head')[0]\n  // /\n  var testElement = function (element, test) {\n    if (that.loaded[element.url]) return\n    if (test && _globalExists(test) === false) return\n    that.loaded[element.url] = true\n    //\n    if (that.loading[element.url]) that.loading[element.url]()\n    delete that.loading[element.url]\n    //\n    if (element.onsuccess) element.onsuccess()\n    if (typeof (getNext) !== 'undefined') getNext()\n  }\n  // /\n  var hasError = false\n  var batchTest = []\n  var addElement = function (element) {\n    if (typeof (element) === 'string') {\n      element = {\n        url: element,\n        verify: config.verify\n      }\n    }\n    if (/([\\w\\d.\\[\\]'\"])$/.test(element.verify)) { // check whether its a variable reference\n      var verify = element.test = element.verify\n      if (typeof (verify) === 'object') {\n        for (var n = 0; n < verify.length; n++) {\n          batchTest.push(verify[n])\n        }\n      } else {\n        batchTest.push(verify)\n      }\n    }\n    if (that.loaded[element.url]) return\n    var script = document.createElement('script')\n    script.onreadystatechange = function () {\n      if (this.readyState !== 'loaded' && this.readyState !== 'complete') return\n      testElement(element)\n    }\n    script.onload = function () {\n      testElement(element)\n    }\n    script.onerror = function () {\n      hasError = true\n      delete that.loading[element.url]\n      if (typeof (element.test) === 'object') {\n        for (let key in element.test) {\n          removeTest(element.test[key])\n        }\n      } else {\n        removeTest(element.test)\n      }\n    }\n    script.setAttribute('type', 'text/javascript')\n    script.setAttribute('src', element.url)\n    doc.appendChild(script)\n    that.loading[element.url] = function () {}\n  }\n  // / checking to see whether everything loaded properly\n  var removeTest = function (test) {\n    var ret = []\n    for (var n = 0; n < batchTest.length; n++) {\n      if (batchTest[n] === test) continue\n      ret.push(batchTest[n])\n    }\n    batchTest = ret\n  }\n  var onLoad = function (element) {\n    if (element) {\n      testElement(element, element.test)\n    } else {\n      for (let n = 0; n < urls.length; n++) {\n        testElement(urls[n], urls[n].test)\n      }\n    }\n    var istrue = true\n    for (let n = 0; n < batchTest.length; n++) {\n      if (_globalExists(batchTest[n]) === false) {\n        istrue = false\n      }\n    }\n    if (!config.strictOrder && istrue) { // finished loading all the requested scripts\n      if (hasError) {\n        if (config.error) {\n          config.error()\n        }\n      } else if (config.onsuccess) {\n        config.onsuccess()\n      }\n    } else { // keep calling back the function\n      setTimeout(function () { // - should get slower over time?\n        onLoad(element)\n      }, 10)\n    }\n  }\n  // / loading methods;  strict ordering or loose ordering\n  if (config.strictOrder) {\n    var ID = -1\n    var getNext = function () {\n      ID++\n      if (!urls[ID]) { // all elements are loaded\n        if (hasError) {\n          if (config.error) {\n            config.error()\n          }\n        } else if (config.onsuccess) {\n          config.onsuccess()\n        }\n      } else { // loading new script\n        var element = urls[ID]\n        var url = element.url\n        if (that.loading[url]) { // already loading from another call (attach to event)\n          that.loading[url] = function () {\n            if (element.onsuccess) element.onsuccess()\n            getNext()\n          }\n        } else if (!that.loaded[url]) { // create script element\n          addElement(element)\n          onLoad(element)\n        } else { // it's already been successfully loaded\n          getNext()\n        }\n      }\n    }\n    getNext()\n  } else { // loose ordering\n    for (let ID = 0; ID < urls.length; ID++) {\n      addElement(urls[ID])\n      onLoad(urls[ID])\n    }\n  }\n}\n\nexport const loadScript = new LoadScript()\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/utils/load-script.js\n **/","/*\n  ----------------------------------------------------------\n  Request : 0.1.1 : 2015-03-26\n  ----------------------------------------------------------\n  request({\n    url: './dir/something.extension',\n    data: 'test!',\n    format: 'text', // text | xml | json | binary\n    responseType: 'text', // arraybuffer | blob | document | json | text\n    headers: {},\n    withCredentials: true, // true | false\n    ///\n    onerror: function(evt, percent) {\n      console.log(evt)\n    },\n    onsuccess: function(evt, responseText) {\n      console.log(responseText)\n    },\n    onprogress: function(evt, percent) {\n      percent = Math.round(percent * 100)\n      loader.create('thread', 'loading... ', percent)\n    }\n  })\n*/\n\nexport function request (opts, onsuccess, onerror, onprogress) {\n  if (typeof opts === 'string') opts = {url: opts}\n  const data = opts.data\n  const url = opts.url\n  const method = opts.method || (opts.data ? 'POST' : 'GET')\n  const format = opts.format\n  const headers = opts.headers\n  const responseType = opts.responseType\n  const withCredentials = opts.withCredentials || false\n  const xhr = new window.XMLHttpRequest()\n  onsuccess = onsuccess || opts.onsuccess\n  onerror = onerror || opts.onerror\n  onprogress = onprogress || opts.onprogress\n  xhr.open(method, url, true)\n  if (headers) {\n    for (var type in headers) {\n      xhr.setRequestHeader(type, headers[type])\n    }\n  } else if (data) { // set the default headers for POST\n    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n  }\n  if (format === 'binary') { // - default to responseType=\"blob\" when supported\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=x-user-defined')\n    }\n  }\n  if (responseType) {\n    xhr.responseType = responseType\n  }\n  if (withCredentials) {\n    xhr.withCredentials = 'true'\n  }\n  if (onerror && 'onerror' in xhr) {\n    xhr.onerror = onerror\n  }\n  if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n    if (data) {\n      xhr.upload.onprogress = function (evt) {\n        onprogress.call(xhr, evt, evt.loaded / evt.total)\n      }\n    } else {\n      xhr.addEventListener('progress', function (evt) {\n        var totalBytes = 0\n        if (evt.lengthComputable) {\n          totalBytes = evt.total\n        } else if (xhr.totalBytes) {\n          totalBytes = xhr.totalBytes\n        } else {\n          var rawBytes = parseInt(xhr.getResponseHeader('Content-Length-Raw'))\n          if (isFinite(rawBytes)) {\n            xhr.totalBytes = totalBytes = rawBytes\n          } else {\n            return\n          }\n        }\n        onprogress.call(xhr, evt, evt.loaded / totalBytes)\n      })\n    }\n  }\n  // /\n  xhr.onreadystatechange = function (evt) {\n    if (xhr.readyState === 4) { // The request is complete\n      if (xhr.status === 200 || // Response OK\n        xhr.status === 304 || // Not Modified\n        xhr.status === 308 // Permanent Redirect\n      ) {\n        if (onsuccess) {\n          var res\n          if (format === 'xml') {\n            res = evt.target.responseXML\n          } else if (format === 'text') {\n            res = evt.target.responseText\n          } else if (format === 'json') {\n            try {\n              res = JSON.parse(evt.target.response)\n            } catch (err) {\n              onerror && onerror.call(xhr, evt)\n            }\n          }\n          onsuccess.call(xhr, evt, res)\n        }\n      } else {\n        onerror && onerror.call(xhr, evt)\n      }\n    }\n  }\n  xhr.send(data)\n  return xhr\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/utils/request.js\n **/","/*\n  ----------------------------------------------------------\n  GeneralMIDI\n  ----------------------------------------------------------\n*/\n\nimport root from './root'\n\nroot.GM = (function (map) {\n  const clean = function (name) {\n    return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase()\n  }\n  const res = {\n    byName: { },\n    byId: { },\n    byCategory: { }\n  }\n  for (let key in map) {\n    var list = map[key]\n    for (var n = 0, length = list.length; n < length; n++) {\n      var instrument = list[n]\n      if (!instrument) continue\n      var num = parseInt(instrument.substr(0, instrument.indexOf(' ')), 10)\n      instrument = instrument.replace(num + ' ', '')\n      res.byId[--num] =\n        res.byName[clean(instrument)] =\n          res.byCategory[clean(key)] = {\n            id: clean(instrument),\n            instrument: instrument,\n            number: num,\n            category: key\n          }\n    }\n  }\n  return res\n})({\n  'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],\n  'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],\n  'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],\n  'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],\n  'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],\n  'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],\n  'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],\n  'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],\n  'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],\n  'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],\n  'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],\n  'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],\n  'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],\n  'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],\n  'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],\n  'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']\n})\n\n/* get/setInstrument\n--------------------------------------------------- */\nroot.getInstrument = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.instrument\n}\n\nroot.setInstrument = function (channelId, program, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.instrument = program\n    }, delay)\n  } else {\n    channel.instrument = program\n  }\n}\n\n/* get/setMono\n--------------------------------------------------- */\nroot.getMono = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.mono\n}\n\nroot.setMono = function (channelId, truthy, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.mono = truthy\n    }, delay)\n  } else {\n    channel.mono = truthy\n  }\n}\n\n/* get/setOmni\n--------------------------------------------------- */\nroot.getOmni = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.omni\n}\n\nroot.setOmni = function (channelId, truthy, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.omni = truthy\n    }, delay)\n  } else {\n    channel.omni = truthy\n  }\n}\n\n/* get/setSolo\n--------------------------------------------------- */\nroot.getSolo = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.solo\n}\n\nroot.setSolo = function (channelId, truthy, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.solo = truthy\n    }, delay)\n  } else {\n    channel.solo = truthy\n  }\n}\n\n/* channels\n--------------------------------------------------- */\nroot.channels = (function () { // 0 - 15 channels\n  var channels = {}\n  for (let i = 0; i < 16; i++) {\n    channels[i] = { // default values\n      instrument: i,\n      pitchBend: 0,\n      mute: false,\n      mono: false,\n      omni: false,\n      solo: false\n    }\n  }\n  return channels\n})()\n\n/* note conversions\n--------------------------------------------------- */\nroot.keyToNote = {} // C8  == 108\nroot.noteToKey = {} // 108 ==  C8\n\n~(function () {\n  var A0 = 0x15 // first note\n  var C8 = 0x6C // last note\n  var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B']\n  for (let n = A0; n <= C8; n++) {\n    var octave = (n - 12) / 12 >> 0\n    var name = number2key[n % 12] + octave\n    root.keyToNote[name] = n\n    root.noteToKey[n] = name\n  }\n})()\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/gm.js\n **/","/*\n  ----------------------------------------------------------\n  midi.Player : 0.3.1 : 2015-03-26\n  ----------------------------------------------------------\n  https://github.com/mudcube/midi.js\n  ----------------------------------------------------------\n*/\n\nimport { MidiFile, Replayer } from './jasmid'\nimport root from './root'\n\n(function () {\n  root.Player = {}\n  const player = root.Player\n  player.currentTime = 0\n  player.endTime = 0\n  player.restart = 0\n  player.playing = false\n  player.timeWarp = 1\n  player.startDelay = 0\n  player.BPM = 120\n\n  player.start = player.resume = function (onsuccess) {\n    if (player.currentTime < -1) {\n      player.currentTime = -1\n    }\n    startAudio(player.currentTime, null, onsuccess)\n  }\n\n  player.pause = function () {\n    var tmp = player.restart\n    stopAudio()\n    player.restart = tmp\n  }\n\n  player.stop = function () {\n    stopAudio()\n    player.restart = 0\n    player.currentTime = 0\n  }\n\n  player.addListener = function (onsuccess) {\n    onMidiEvent = onsuccess\n  }\n\n  player.removeListener = function () {\n    onMidiEvent = undefined\n  }\n\n  player.clearAnimation = function () {\n    if (player.animationFrameId) {\n      window.cancelAnimationFrame(player.animationFrameId)\n    }\n  }\n\n  player.setAnimation = function (callback) {\n    var currentTime = 0\n    var tOurTime = 0\n    var tTheirTime = 0\n    //\n    player.clearAnimation()\n    // /\n    var frame = function () {\n      player.animationFrameId = window.requestAnimationFrame(frame)\n      // /\n      if (player.endTime === 0) {\n        return\n      }\n      if (player.playing) {\n        currentTime = (tTheirTime === player.currentTime) ? tOurTime - Date.now() : 0\n        if (player.currentTime === 0) {\n          currentTime = 0\n        } else {\n          currentTime = player.currentTime - currentTime\n        }\n        if (tTheirTime !== player.currentTime) {\n          tOurTime = Date.now()\n          tTheirTime = player.currentTime\n        }\n      } else { // paused\n        currentTime = player.currentTime\n      }\n      // /\n      var endTime = player.endTime\n      // var percent = currentTime / endTime\n      var total = currentTime / 1000\n      var minutes = total / 60\n      var seconds = total - (minutes * 60)\n      var t1 = minutes * 60 + seconds\n      var t2 = (endTime / 1000)\n      // /\n      if (t2 - t1 < -1.0) {\n        return\n      } else {\n        callback({\n          now: t1,\n          end: t2,\n          events: noteRegistrar\n        })\n      }\n    }\n    // /\n    window.requestAnimationFrame(frame)\n  }\n\n  // helpers\n\n  player.loadMidiFile = function (onsuccess, onprogress, onerror) {\n    try {\n      // console.log(MidiFile(player.currentData), new Replayer(MidiFile(player.currentData), player.timeWarp, null, player.BPM))\n      player.replayer = new Replayer(MidiFile(player.currentData), player.timeWarp, null, player.BPM)\n      player.data = player.replayer.getData()\n      player.endTime = getLength()\n      // /\n      root.loadPlugin({\n        // instruments: player.getFileInstruments(),\n        onsuccess: onsuccess,\n        onprogress: onprogress,\n        onerror: onerror\n      })\n    } catch (event) {\n      console.error(event)\n      onerror && onerror(event)\n    }\n  }\n\n  player.loadFile = function (file, onsuccess, onprogress, onerror) {\n    player.stop()\n    if (file.indexOf('base64,') !== -1) {\n      var data = window.atob(file.split(',')[1])\n      player.currentData = data\n      player.loadMidiFile(onsuccess, onprogress, onerror)\n    } else {\n      var fetch = new window.XMLHttpRequest()\n      fetch.open('GET', file)\n      fetch.overrideMimeType('text/plain; charset=x-user-defined')\n      fetch.onreadystatechange = function () {\n        if (this.readyState === 4) {\n          if (this.status === 200) {\n            var t = this.responseText || ''\n            var ff = []\n            var mx = t.length\n            var scc = String.fromCharCode\n            for (var z = 0; z < mx; z++) {\n              ff[z] = scc(t.charCodeAt(z) & 255)\n            }\n            // /\n            var data = ff.join('')\n            player.currentData = data\n            player.loadMidiFile(onsuccess, onprogress, onerror)\n          } else {\n            onerror && onerror('Unable to load MIDI file')\n          }\n        }\n      }\n      fetch.send()\n    }\n  }\n\n  player.getFileInstruments = function () {\n    var instruments = {}\n    var programs = {}\n    for (var n = 0; n < player.data.length; n++) {\n      var event = player.data[n][0].event\n      if (event.type !== 'channel') {\n        continue\n      }\n      var channel = event.channel\n      switch (event.subtype) {\n        case 'controller':\n          //        console.log(event.channel, root.defineControl[event.controllerType], event.value)\n          break\n        case 'programChange':\n          programs[channel] = event.programNumber\n          break\n        case 'noteOn':\n          var program = programs[channel]\n          var gm = root.GM.byId[isFinite(program) ? program : channel]\n          instruments[gm.id] = true\n          break\n      }\n    }\n    var ret = []\n    for (var key in instruments) {\n      ret.push(key)\n    }\n    return ret\n  }\n\n  // Playing the audio\n\n  var eventQueue = [] // hold events to be triggered\n  var queuedTime //\n  var startTime = 0 // to measure time elapse\n  var noteRegistrar = {} // get event for requested note\n  var onMidiEvent // listener\n  var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {\n    return setTimeout(function () {\n      var data = {\n        channel: channel,\n        note: note,\n        now: currentTime,\n        end: player.endTime,\n        message: message,\n        velocity: velocity\n      }\n      //\n      if (message === 128) {\n        delete noteRegistrar[note]\n      } else {\n        noteRegistrar[note] = data\n      }\n      if (onMidiEvent) {\n        onMidiEvent(data)\n      }\n      player.currentTime = currentTime\n      // /\n      eventQueue.shift()\n      // /\n      if (eventQueue.length < 1000) {\n        startAudio(queuedTime, true)\n      } else if (player.currentTime === queuedTime && queuedTime < player.endTime) { // grab next sequence\n        startAudio(queuedTime, true)\n      }\n    }, currentTime - offset)\n  }\n\n  var getContext = function () {\n    if (root.api === 'webaudio') {\n      return root.WebAudio.getContext()\n    } else {\n      player.ctx = {currentTime: 0}\n    }\n    return player.ctx\n  }\n\n  var getLength = function () {\n    var data = player.data\n    var length = data.length\n    var totalTime = 0.5\n    for (var n = 0; n < length; n++) {\n      totalTime += data[n][1]\n    }\n    return totalTime\n  }\n\n  var __now\n  var getNow = function () {\n    if (window.performance && window.performance.now) {\n      return window.performance.now()\n    } else {\n      return Date.now()\n    }\n  }\n\n  var startAudio = function (currentTime, fromCache, onsuccess) {\n    if (!player.replayer) {\n      return\n    }\n    if (!fromCache) {\n      if (typeof currentTime === 'undefined') {\n        currentTime = player.restart\n      }\n      // /\n      player.playing && stopAudio()\n      player.playing = true\n      player.data = player.replayer.getData()\n      player.endTime = getLength()\n    }\n    // /\n    var note\n    var offset = 0\n    var messages = 0\n    var data = player.data\n    var ctx = getContext()\n    var length = data.length\n    //\n    queuedTime = 0.5\n    // /\n    // var interval = eventQueue[0] && eventQueue[0].interval || 0\n    var foffset = currentTime - player.currentTime\n    // /\n    if (root.api !== 'webaudio') { // set currentTime on ctx\n      var now = getNow()\n      __now = __now || now\n      ctx.currentTime = (now - __now) / 1000\n    }\n    // /\n    startTime = ctx.currentTime\n    // /\n    for (var n = 0; n < length && messages < 100; n++) {\n      var obj = data[n]\n      if ((queuedTime += obj[1]) <= currentTime) {\n        offset = queuedTime\n        continue\n      }\n      // /\n      currentTime = queuedTime - offset\n      // /\n      var event = obj[0].event\n      if (event.type !== 'channel') {\n        continue\n      }\n      // /\n      var channelId = event.channel\n      var channel = root.channels[channelId]\n      var delay = ctx.currentTime + ((currentTime + foffset + player.startDelay) / 1000)\n      var queueTime = queuedTime - offset + player.startDelay\n      switch (event.subtype) {\n        case 'controller':\n          root.setController(channelId, event.controllerType, event.value, delay)\n          break\n        case 'programChange':\n          root.programChange(channelId, event.programNumber, delay)\n          break\n        case 'pitchBend':\n          root.pitchBend(channelId, event.value, delay)\n          break\n        case 'noteOn':\n          if (channel.mute) break\n          note = event.noteNumber - (player.MIDIOffset || 0)\n          eventQueue.push({\n            event: event,\n            time: queueTime,\n            source: root.noteOn(channelId, event.noteNumber, event.velocity, delay),\n            interval: scheduleTracking(channelId, note, queuedTime + player.startDelay, offset - foffset, 144, event.velocity)\n          })\n          messages++\n          break\n        case 'noteOff':\n          if (channel.mute) break\n          note = event.noteNumber - (player.MIDIOffset || 0)\n          eventQueue.push({\n            event: event,\n            time: queueTime,\n            source: root.noteOff(channelId, event.noteNumber, delay),\n            interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)\n          })\n          break\n        default:\n          break\n      }\n    }\n    // /\n    onsuccess && onsuccess(eventQueue)\n  }\n\n  var stopAudio = function () {\n    var ctx = getContext()\n    player.playing = false\n    player.restart += (ctx.currentTime - startTime) * 1000\n    // stop the audio, and intervals\n    while (eventQueue.length) {\n      let o = eventQueue.pop()\n      window.clearInterval(o.interval)\n      if (!o.source) continue // is not webaudio\n      if (typeof (o.source) === 'number') {\n        window.clearTimeout(o.source)\n      } else { // webaudio\n        o.source.disconnect(0)\n      }\n    }\n    // run callback to cancel any notes still playing\n    for (var key in noteRegistrar) {\n      let o = noteRegistrar[key]\n      if (noteRegistrar[key].message === 144 && onMidiEvent) {\n        onMidiEvent({\n          channel: o.channel,\n          note: o.note,\n          now: o.now,\n          end: o.end,\n          message: 128,\n          velocity: o.velocity\n        })\n      }\n    }\n    // reset noteRegistrar\n    noteRegistrar = {}\n  }\n})()\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/player.js\n **/","export * from './midifile'\nexport * from './replayer'\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/jasmid/index.js\n **/","/**\n * class to parse the .mid file format\n * (depends on _stream.js)\n */\n\nimport Stream from './_stream'\n\nexport function MidiFile (data) {\n  var lastEventTypeByte\n\n  function readChunk (stream) {\n    var id = stream.read(4)\n    var length = stream.readInt32()\n    return {\n      'id': id,\n      'length': length,\n      'data': stream.read(length)\n    }\n  }\n\n  function readEvent (stream) {\n    var event = {}\n    event.deltaTime = stream.readVarInt()\n    var eventTypeByte = stream.readInt8()\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      /* system / meta event */\n      if (eventTypeByte === 0xff) {\n        /* meta event */\n        event.type = 'meta'\n        var subtypeByte = stream.readInt8()\n        let length = stream.readVarInt()\n        switch (subtypeByte) {\n          case 0x00:\n            event.subtype = 'sequenceNumber'\n            if (length !== 2) throw new Error('Expected length for sequenceNumber event is 2, got ' + length)\n            event.number = stream.readInt16()\n            return event\n          case 0x01:\n            event.subtype = 'text'\n            event.text = stream.read(length)\n            return event\n          case 0x02:\n            event.subtype = 'copyrightNotice'\n            event.text = stream.read(length)\n            return event\n          case 0x03:\n            event.subtype = 'trackName'\n            event.text = stream.read(length)\n            return event\n          case 0x04:\n            event.subtype = 'instrumentName'\n            event.text = stream.read(length)\n            return event\n          case 0x05:\n            event.subtype = 'lyrics'\n            event.text = stream.read(length)\n            return event\n          case 0x06:\n            event.subtype = 'marker'\n            event.text = stream.read(length)\n            return event\n          case 0x07:\n            event.subtype = 'cuePoint'\n            event.text = stream.read(length)\n            return event\n          case 0x20:\n            event.subtype = 'midiChannelPrefix'\n            if (length !== 1) throw new Error('Expected length for midiChannelPrefix event is 1, got ' + length)\n            event.channel = stream.readInt8()\n            return event\n          case 0x2f:\n            event.subtype = 'endOfTrack'\n            if (length !== 0) throw new Error('Expected length for endOfTrack event is 0, got ' + length)\n            return event\n          case 0x51:\n            event.subtype = 'setTempo'\n            if (length !== 3) throw new Error('Expected length for setTempo event is 3, got ' + length)\n            event.microsecondsPerBeat = (\n              (stream.readInt8() << 16) +\n              (stream.readInt8() << 8) +\n              stream.readInt8()\n            )\n            return event\n          case 0x54:\n            event.subtype = 'smpteOffset'\n            if (length !== 5) throw new Error('Expected length for smpteOffset event is 5, got ' + length)\n            var hourByte = stream.readInt8()\n            event.frameRate = {\n              0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n            }[hourByte & 0x60]\n            event.hour = hourByte & 0x1f\n            event.min = stream.readInt8()\n            event.sec = stream.readInt8()\n            event.frame = stream.readInt8()\n            event.subframe = stream.readInt8()\n            return event\n          case 0x58:\n            event.subtype = 'timeSignature'\n            if (length !== 4) throw new Error('Expected length for timeSignature event is 4, got ' + length)\n            event.numerator = stream.readInt8()\n            event.denominator = Math.pow(2, stream.readInt8())\n            event.metronome = stream.readInt8()\n            event.thirtyseconds = stream.readInt8()\n            return event\n          case 0x59:\n            event.subtype = 'keySignature'\n            if (length !== 2) throw new Error('Expected length for keySignature event is 2, got ' + length)\n            event.key = stream.readInt8(true)\n            event.scale = stream.readInt8()\n            return event\n          case 0x7f:\n            event.subtype = 'sequencerSpecific'\n            event.data = stream.read(length)\n            return event\n          default:\n            // console.log(\"Unrecognised meta event subtype: \" + subtypeByte)\n            event.subtype = 'unknown'\n            event.data = stream.read(length)\n            return event\n        }\n        // event.data = stream.read(length)\n        // return event\n      } else if (eventTypeByte === 0xf0) {\n        event.type = 'sysEx'\n        let length = stream.readVarInt()\n        event.data = stream.read(length)\n        return event\n      } else if (eventTypeByte === 0xf7) {\n        event.type = 'dividedSysEx'\n        let length = stream.readVarInt()\n        event.data = stream.read(length)\n        return event\n      } else {\n        throw new Error('Unrecognised MIDI event type byte: ' + eventTypeByte)\n      }\n    } else {\n      /* channel event */\n      var param1\n      if ((eventTypeByte & 0x80) === 0) {\n        /* running status - reuse lastEventTypeByte as the event type.\n          eventTypeByte is actually the first parameter\n        */\n        param1 = eventTypeByte\n        eventTypeByte = lastEventTypeByte\n      } else {\n        param1 = stream.readInt8()\n        lastEventTypeByte = eventTypeByte\n      }\n      var eventType = eventTypeByte >> 4\n      event.channel = eventTypeByte & 0x0f\n      event.type = 'channel'\n      switch (eventType) {\n        case 0x08:\n          event.subtype = 'noteOff'\n          event.noteNumber = param1\n          event.velocity = stream.readInt8()\n          return event\n        case 0x09:\n          event.noteNumber = param1\n          event.velocity = stream.readInt8()\n          if (event.velocity === 0) {\n            event.subtype = 'noteOff'\n          } else {\n            event.subtype = 'noteOn'\n          }\n          return event\n        case 0x0a:\n          event.subtype = 'noteAftertouch'\n          event.noteNumber = param1\n          event.amount = stream.readInt8()\n          return event\n        case 0x0b:\n          event.subtype = 'controller'\n          event.controllerType = param1\n          event.value = stream.readInt8()\n          return event\n        case 0x0c:\n          event.subtype = 'programChange'\n          event.programNumber = param1\n          return event\n        case 0x0d:\n          event.subtype = 'channelAftertouch'\n          event.amount = param1\n          return event\n        case 0x0e:\n          event.subtype = 'pitchBend'\n          event.value = param1 + (stream.readInt8() << 7)\n          return event\n        default:\n          throw new Error('Unrecognised MIDI event type: ' + eventType)\n      /*\n      console.log(\"Unrecognised MIDI event type: \" + eventType)\n      stream.readInt8()\n      event.subtype = 'unknown'\n      return event\n      */\n      }\n    }\n  }\n\n  const stream = Stream(data)\n  var headerChunk = readChunk(stream)\n  if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n    throw new Error('Bad .mid file - header not found')\n  }\n  var headerStream = Stream(headerChunk.data)\n  var formatType = headerStream.readInt16()\n  var trackCount = headerStream.readInt16()\n  var timeDivision = headerStream.readInt16()\n  var ticksPerBeat\n\n  if (timeDivision & 0x8000) {\n    throw new Error('Expressing time division in SMTPE frames is not supported yet')\n  } else {\n    ticksPerBeat = timeDivision\n  }\n\n  var header = {\n    'formatType': formatType,\n    'trackCount': trackCount,\n    'ticksPerBeat': ticksPerBeat\n  }\n  var tracks = []\n  for (var i = 0; i < header.trackCount; i++) {\n    tracks[i] = []\n    var trackChunk = readChunk(stream)\n    if (trackChunk.id !== 'MTrk') {\n      throw new Error('Unexpected chunk - expected MTrk, got ' + trackChunk.id)\n    }\n    var trackStream = Stream(trackChunk.data)\n    while (!trackStream.eof()) {\n      var event = readEvent(trackStream)\n      tracks[i].push(event)\n    // console.log(event)\n    }\n  }\n\n  return {\n    'header': header,\n    'tracks': tracks\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/jasmid/midifile.js\n **/","/* Wrapper for accessing strings through sequential reads */\nexport default function (str) {\n  var position = 0\n\n  function read (length) {\n    var result = str.substr(position, length)\n    position += length\n    return result\n  }\n\n  /* read a big-endian 32-bit integer */\n  function readInt32 () {\n    var result = (\n    (str.charCodeAt(position) << 24) +\n    (str.charCodeAt(position + 1) << 16) +\n    (str.charCodeAt(position + 2) << 8) +\n    str.charCodeAt(position + 3))\n    position += 4\n    return result\n  }\n\n  /* read a big-endian 16-bit integer */\n  function readInt16 () {\n    var result = (\n    (str.charCodeAt(position) << 8) +\n    str.charCodeAt(position + 1))\n    position += 2\n    return result\n  }\n\n  /* read an 8-bit integer */\n  function readInt8 (signed) {\n    var result = str.charCodeAt(position)\n    if (signed && result > 127) result -= 256\n    position += 1\n    return result\n  }\n\n  function eof () {\n    return position >= str.length\n  }\n\n  /* read a MIDI-style variable-length integer\n    (big-endian value in groups of 7 bits,\n    with top bit set to signify that another byte follows)\n  */\n  function readVarInt () {\n    var result = 0\n    while (true) {\n      var b = readInt8()\n      if (b & 0x80) {\n        result += (b & 0x7f)\n        result <<= 7\n      } else {\n        /* b is the last byte */\n        return result + b\n      }\n    }\n  }\n\n  return {\n    'eof': eof,\n    'read': read,\n    'readInt32': readInt32,\n    'readInt16': readInt16,\n    'readInt8': readInt8,\n    'readVarInt': readVarInt\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/jasmid/_stream.js\n **/","const clone = function (o) {\n  if (typeof o !== 'object') return (o)\n  if (o === null) return (o)\n  var ret = (typeof o.length === 'number') ? [] : {}\n  for (var key in o) ret[key] = clone(o[key])\n  return ret\n}\n\nexport function Replayer (midiFile, timeWarp, eventProcessor, bpm) {\n  var trackStates = []\n  var beatsPerMinute = bpm || 120\n  var bpmOverride = !!bpm\n  var ticksPerBeat = midiFile.header.ticksPerBeat\n\n  for (let i = 0; i < midiFile.tracks.length; i++) {\n    trackStates[i] = {\n      'nextEventIndex': 0,\n      'ticksToNextEvent': (midiFile.tracks[i].length ? midiFile.tracks[i][0].deltaTime : null)\n    }\n  }\n\n  function getNextEvent () {\n    var ticksToNextEvent = null\n    var nextEventTrack = null\n    var nextEventIndex = null\n\n    for (let i = 0; i < trackStates.length; i++) {\n      if (\n        trackStates[i].ticksToNextEvent != null &&\n        (ticksToNextEvent == null || trackStates[i].ticksToNextEvent < ticksToNextEvent)\n      ) {\n        ticksToNextEvent = trackStates[i].ticksToNextEvent\n        nextEventTrack = i\n        nextEventIndex = trackStates[i].nextEventIndex\n      }\n    }\n    if (nextEventTrack != null) {\n      /* consume event from that track */\n      var nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex]\n      if (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\n        trackStates[nextEventTrack].ticksToNextEvent += midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime\n      } else {\n        trackStates[nextEventTrack].ticksToNextEvent = null\n      }\n      trackStates[nextEventTrack].nextEventIndex += 1\n      /* advance timings on all tracks by ticksToNextEvent */\n      for (let i = 0; i < trackStates.length; i++) {\n        if (trackStates[i].ticksToNextEvent != null) {\n          trackStates[i].ticksToNextEvent -= ticksToNextEvent\n        }\n      }\n      return {\n        'ticksToEvent': ticksToNextEvent,\n        'event': nextEvent,\n        'track': nextEventTrack\n      }\n    } else {\n      return null\n    }\n  }\n  //\n  var midiEvent\n  var temporal = []\n  ~(function processEvents () {\n    function processNext () {\n      if (!bpmOverride && midiEvent.event.type === 'meta' && midiEvent.event.subtype === 'setTempo') {\n        // tempo change events can occur anywhere in the middle and affect events that follow\n        beatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat\n      }\n      // /\n      var beatsToGenerate = 0\n      var secondsToGenerate = 0\n      if (midiEvent.ticksToEvent > 0) {\n        beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat\n        secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60)\n      }\n      // /\n      var time = (secondsToGenerate * 1000 * timeWarp) || 0\n      temporal.push([midiEvent, time])\n      midiEvent = getNextEvent()\n    }\n    // /\n    midiEvent = getNextEvent()\n    if (midiEvent) {\n      while (midiEvent) processNext(true)\n    }\n  })()\n\n  return {\n    getData: function () {\n      return clone(temporal)\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/jasmid/replayer.js\n **/","import './audiotag'\nimport './webaudio'\nimport './webmidi'\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/plugins/index.js\n **/","/*\n  ----------------------------------------------------------------------\n  AudioTag <audio> - OGG or MPEG Soundbank\n  ----------------------------------------------------------------------\n  http://dev.w3.org/html5/spec/Overview.html#the-audio-element\n  ----------------------------------------------------------------------\n*/\nimport root from '../root'\n\nwindow.Audio && (function () {\n  var midi = root.AudioTag = { api: 'audiotag' }\n  var noteToKey = {}\n  var volume = 127 // floating point\n  var bufferNid = -1 // current channel\n  var audioBuffers = [] // the audio channels\n  var notesOn = [] // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls\n  var notes = {} // the piano keys\n  for (let nid = 0; nid < 12; nid++) {\n    audioBuffers[nid] = new window.Audio()\n  }\n\n  var playChannel = function (channel, note) {\n    if (!root.channels[channel]) return\n    var instrument = root.channels[channel].instrument\n    var instrumentId = root.GM.byId[instrument].id\n    note = notes[note]\n    if (note) {\n      var instrumentNoteId = instrumentId + '' + note.id\n      var nid = (bufferNid + 1) % audioBuffers.length\n      var audio = audioBuffers[nid]\n      notesOn[ nid ] = instrumentNoteId\n      if (!root.Soundfont[instrumentId]) {\n        if (root.DEBUG) {\n          console.log('404', instrumentId)\n        }\n        return\n      }\n      audio.src = root.Soundfont[instrumentId][note.id]\n      audio.volume = volume / 127\n      audio.play()\n      bufferNid = nid\n    }\n  }\n\n  var stopChannel = function (channel, note) {\n    if (!root.channels[channel]) return\n    var instrument = root.channels[channel].instrument\n    var instrumentId = root.GM.byId[instrument].id\n    note = notes[note]\n    if (note) {\n      var instrumentNoteId = instrumentId + '' + note.id\n      for (var i = 0, len = audioBuffers.length; i < len; i++) {\n        var nid = (i + bufferNid + 1) % len\n        var cId = notesOn[nid]\n        if (cId && cId === instrumentNoteId) {\n          audioBuffers[nid].pause()\n          notesOn[nid] = null\n          return\n        }\n      }\n    }\n  }\n\n  midi.audioBuffers = audioBuffers\n  midi.send = function (data, delay) {}\n  midi.setController = function (channel, type, value, delay) {}\n  midi.setVolume = function (channel, n) {\n    volume = n // - should be channel specific volume\n  }\n\n  midi.programChange = function (channel, program) {\n    root.channels[channel].instrument = program\n  }\n\n  midi.pitchBend = function (channel, program, delay) {}\n\n  midi.noteOn = function (channel, note, velocity, delay) {\n    var id = noteToKey[note]\n    if (!notes[id]) return\n    if (delay) {\n      return setTimeout(function () {\n        playChannel(channel, id)\n      }, delay * 1000)\n    } else {\n      playChannel(channel, id)\n    }\n  }\n\n  midi.noteOff = function (channel, note, delay) {\n    //      var id = noteToKey[note]\n    //      if (!notes[id]) return\n    //      if (delay) {\n    //        return setTimeout(function() {\n    //          stopChannel(channel, id)\n    //        }, delay * 1000)\n    //      } else {\n    //        stopChannel(channel, id)\n    //      }\n  }\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    for (var idx = 0; idx < chord.length; idx++) {\n      var n = chord[idx]\n      var id = noteToKey[n]\n      if (!notes[id]) continue\n      if (delay) {\n        return setTimeout(function () {\n          playChannel(channel, id)\n        }, delay * 1000)\n      } else {\n        playChannel(channel, id)\n      }\n    }\n  }\n\n  midi.chordOff = function (channel, chord, delay) {\n    for (var idx = 0; idx < chord.length; idx++) {\n      var n = chord[idx]\n      var id = noteToKey[n]\n      if (!notes[id]) continue\n      if (delay) {\n        return setTimeout(function () {\n          stopChannel(channel, id)\n        }, delay * 1000)\n      } else {\n        stopChannel(channel, id)\n      }\n    }\n  }\n\n  midi.stopAllNotes = function () {\n    for (var nid = 0, length = audioBuffers.length; nid < length; nid++) {\n      audioBuffers[nid].pause()\n    }\n  }\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi)\n    // /\n    for (var key in root.keyToNote) {\n      noteToKey[root.keyToNote[key]] = key\n      notes[key] = {id: key}\n    }\n    // /\n    opts.onsuccess && opts.onsuccess()\n  }\n})()\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/plugins/audiotag.js\n **/","/*\n  ----------------------------------------------------------\n  Web Audio API - OGG or MPEG Soundbank\n  ----------------------------------------------------------\n  http://webaudio.github.io/web-audio-api/\n  ----------------------------------------------------------\n*/\nimport root from '../root'\n\n// REF: http://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer\nfunction base64ToArrayBuffer (base64) {\n  var binaryString = window.atob(base64)\n  var len = binaryString.length\n  var bytes = new Uint8Array(len)\n  for (var i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n  return bytes.buffer\n}\n\nwindow.AudioContext && (function () {\n  // var audioContext = null // new AudioContext()\n  var useStreamingBuffer = false // !!audioContext.createMediaElementSource\n  var midi = root.WebAudio = { api: 'webaudio' }\n  var ctx // audio context\n  var sources = {}\n  var effects = {}\n  var masterVolume = 127\n  var audioBuffers = {}\n  // /\n  midi.audioBuffers = audioBuffers\n  midi.send = function (data, delay) {}\n  midi.setController = function (channelId, type, value, delay) {}\n\n  midi.setVolume = function (channelId, volume, delay) {\n    if (delay) {\n      setTimeout(function () {\n        masterVolume = volume\n      }, delay * 1000)\n    } else {\n      masterVolume = volume\n    }\n  }\n\n  midi.programChange = function (channelId, program, delay) {\n    //      if (delay) {\n    //        return setTimeout(function() {\n    //          var channel = root.channels[channelId]\n    //          channel.instrument = program\n    //        }, delay)\n    //      } else {\n    var channel = root.channels[channelId]\n    channel.instrument = program\n  //      }\n  }\n\n  midi.pitchBend = function (channelId, program, delay) {\n    //      if (delay) {\n    //        setTimeout(function() {\n    //          var channel = root.channels[channelId]\n    //          channel.pitchBend = program\n    //        }, delay)\n    //      } else {\n    var channel = root.channels[channelId]\n    channel.pitchBend = program\n  //      }\n  }\n\n  midi.noteOn = function (channelId, noteId, velocity, delay) {\n    delay = delay || 0\n\n    // / check whether the note exists\n    var channel = root.channels[channelId]\n    var instrument = channel.instrument\n    var bufferId = instrument + '' + noteId\n    var buffer = audioBuffers[bufferId]\n    if (!buffer) {\n      //        console.log(midi.GM.byId[instrument].id, instrument, channelId)\n      return\n    }\n\n    // / convert relative delay to absolute delay\n    if (delay < ctx.currentTime) {\n      delay += ctx.currentTime\n    }\n\n    // / create audio buffer\n    var source\n    if (useStreamingBuffer) {\n      source = ctx.createMediaElementSource(buffer)\n    } else { // XMLHTTP buffer\n      source = ctx.createBufferSource()\n      source.buffer = buffer\n    }\n\n    // / add effects to buffer\n    if (effects) {\n      var chain = source\n      for (var key in effects) {\n        chain.connect(effects[key].input)\n        chain = effects[key]\n      }\n    }\n\n    // / add gain + pitchShift\n    var gain = (velocity / 127) * (masterVolume / 127) * 2 - 1\n    source.connect(ctx.destination)\n    source.playbackRate.value = 1 // pitch shift\n    source.gainNode = ctx.createGain() // gain\n    source.gainNode.connect(ctx.destination)\n    source.gainNode.gain.value = Math.min(1.0, Math.max(-1.0, gain))\n    source.connect(source.gainNode)\n    // /\n    if (useStreamingBuffer) {\n      if (delay) {\n        return setTimeout(function () {\n          buffer.currentTime = 0\n          buffer.play()\n        }, delay * 1000)\n      } else {\n        buffer.currentTime = 0\n        buffer.play()\n      }\n    } else {\n      source.start(delay || 0)\n    }\n    // /\n    sources[channelId + '' + noteId] = source\n    // /\n    return source\n  }\n\n  midi.noteOff = function (channelId, noteId, delay) {\n    delay = delay || 0\n\n    // / check whether the note exists\n    var channel = root.channels[channelId]\n    var instrument = channel.instrument\n    var bufferId = instrument + '' + noteId\n    var buffer = audioBuffers[bufferId]\n    if (buffer) {\n      if (delay < ctx.currentTime) {\n        delay += ctx.currentTime\n      }\n      // /\n      var source = sources[channelId + '' + noteId]\n      if (source) {\n        if (source.gainNode) {\n          // @Miranet: 'the values of 0.2 and 0.3 could of course be used as\n          // a 'release' parameter for ADSR like time settings.'\n          // add { 'metadata': { release: 0.3 } } to soundfont files\n          var gain = source.gainNode.gain\n          gain.linearRampToValueAtTime(gain.value, delay)\n          gain.linearRampToValueAtTime(-1.0, delay + 0.3)\n        }\n        // /\n        if (useStreamingBuffer) {\n          if (delay) {\n            setTimeout(function () {\n              buffer.pause()\n            }, delay * 1000)\n          } else {\n            buffer.pause()\n          }\n        } else {\n          if (source.noteOff) {\n            source.noteOff(delay + 0.5)\n          } else {\n            source.stop(delay + 0.5)\n          }\n        }\n        // /\n        delete sources[channelId + '' + noteId]\n        // /\n        return source\n      }\n    }\n  }\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    var res = {}\n    for (var n = 0, note, len = chord.length; n < len; n++) {\n      res[note = chord[n]] = midi.noteOn(channel, note, velocity, delay)\n    }\n    return res\n  }\n\n  midi.chordOff = function (channel, chord, delay) {\n    var res = {}\n    for (var n = 0, note, len = chord.length; n < len; n++) {\n      res[note = chord[n]] = midi.noteOff(channel, note, delay)\n    }\n    return res\n  }\n\n  midi.stopAllNotes = function () {\n    for (var sid in sources) {\n      var delay = 0\n      if (delay < ctx.currentTime) {\n        delay += ctx.currentTime\n      }\n      var source = sources[sid]\n      source.gain.linearRampToValueAtTime(1, delay)\n      source.gain.linearRampToValueAtTime(0, delay + 0.3)\n      if (source.noteOff) { // old api\n        source.noteOff(delay + 0.3)\n      } else { // new api\n        source.stop(delay + 0.3)\n      }\n      delete sources[sid]\n    }\n  }\n\n  midi.setEffects = function (list) {\n    if (ctx.tunajs) {\n      for (var n = 0; n < list.length; n++) {\n        var data = list[n]\n        var effect = new ctx.tunajs[data.type](data)\n        effect.connect(ctx.destination)\n        effects[data.type] = effect\n      }\n    } else {\n      return console.log('Effects module not installed.')\n    }\n  }\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi)\n    midi.setContext(ctx || createAudioContext(), opts.onsuccess)\n  }\n\n  midi.getContext = function () {\n    return ctx\n  }\n\n  midi.setContext = function (newCtx, onload, onprogress, onerror) {\n    ctx = newCtx\n\n    // / tuna.js effects module - https://github.com/Dinahmoe/tuna\n    if (typeof window.Tuna !== 'undefined' && !ctx.tunajs) {\n      ctx.tunajs = new window.Tuna(ctx)\n    }\n\n    // / loading audio files\n    var urls = []\n    var notes = root.keyToNote\n    for (let key in notes) urls.push(key)\n    // /\n    var waitForEnd = function (instrument) {\n      for (let key in bufferPending) { // has pending items\n        if (bufferPending[key]) return\n      }\n      // /\n      if (onload) { // run onload once\n        onload()\n        onload = null\n      }\n    }\n    // /\n    var requestAudio = function (soundfont, instrumentId, index, key) {\n      var url = soundfont[key]\n      if (url) {\n        bufferPending[instrumentId]++\n        loadAudio(url, function (buffer) {\n          buffer.id = key\n          var noteId = root.keyToNote[key]\n          audioBuffers[instrumentId + '' + noteId] = buffer\n          // /\n          if (--bufferPending[instrumentId] === 0) {\n            // var percent = index / 87\n            //              console.log(midi.GM.byId[instrumentId], 'processing: ', percent)\n            soundfont.isLoaded = true\n            waitForEnd(instrument)\n          }\n        }, function (err) {\n          console.error(err)\n        })\n      }\n    }\n    // /\n    var bufferPending = {}\n    for (var instrument in root.Soundfont) {\n      var soundfont = root.Soundfont[instrument]\n      if (soundfont.isLoaded) {\n        continue\n      }\n      // /\n      var synth = root.GM.byName[instrument]\n      var instrumentId = synth.number\n      // /\n      bufferPending[instrumentId] = 0\n      // /\n      for (let index = 0; index < urls.length; index++) {\n        let key = urls[index]\n        requestAudio(soundfont, instrumentId, index, key)\n      }\n    }\n    // /\n    setTimeout(waitForEnd, 1)\n  }\n\n  /* Load audio file: streaming | base64 | arraybuffer\n  ---------------------------------------------------------------------- */\n  function loadAudio (url, onload, onerror) {\n    if (useStreamingBuffer) {\n      var audio = new window.Audio()\n      audio.src = url\n      audio.controls = false\n      audio.autoplay = false\n      audio.preload = false\n      audio.addEventListener('canplay', function () {\n        onload && onload(audio)\n      })\n      audio.addEventListener('error', function (err) {\n        onerror && onerror(err)\n      })\n      document.body.appendChild(audio)\n    } else if (url.indexOf('data:audio') === 0) { // Base64 string\n      var base64 = url.split(',')[1]\n      var buffer = base64ToArrayBuffer(base64)\n      ctx.decodeAudioData(buffer, onload, onerror)\n    } else { // XMLHTTP buffer\n      var request = new window.XMLHttpRequest()\n      request.open('GET', url, true)\n      request.responseType = 'arraybuffer'\n      request.onload = function () {\n        ctx.decodeAudioData(request.response, onload, onerror)\n      }\n      request.send()\n    }\n  }\n\n  function createAudioContext () {\n    return new (window.AudioContext || window.webkitAudioContext)()\n  }\n})()\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/plugins/webaudio.js\n **/","/*\n  ----------------------------------------------------------------------\n  Web MIDI API - Native Soundbanks\n  ----------------------------------------------------------------------\n  http://webaudio.github.io/web-midi-api/\n  ----------------------------------------------------------------------\n*/\nimport root from '../root'\n\n(function () {\n  var plugin = null\n  var output = null\n  var midi = root.WebMIDI = {api: 'webmidi'}\n  midi.send = function (data, delay) { // set channel volume\n    output.send(data, delay * 1000)\n  }\n\n  midi.setController = function (channel, type, value, delay) {\n    output.send([channel, type, value], delay * 1000)\n  }\n\n  midi.setVolume = function (channel, volume, delay) { // set channel volume\n    output.send([0xB0 + channel, 0x07, volume], delay * 1000)\n  }\n\n  midi.programChange = function (channel, program, delay) { // change patch (instrument)\n    output.send([0xC0 + channel, program], delay * 1000)\n  }\n\n  midi.pitchBend = function (channel, program, delay) { // pitch bend\n    output.send([0xE0 + channel, program], delay * 1000)\n  }\n\n  midi.noteOn = function (channel, note, velocity, delay) {\n    output.send([0x90 + channel, note, velocity], delay * 1000)\n  }\n\n  midi.noteOff = function (channel, note, delay) {\n    output.send([0x80 + channel, note, 0], delay * 1000)\n  }\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    for (var n = 0; n < chord.length; n++) {\n      var note = chord[n]\n      output.send([0x90 + channel, note, velocity], delay * 1000)\n    }\n  }\n\n  midi.chordOff = function (channel, chord, delay) {\n    for (var n = 0; n < chord.length; n++) {\n      var note = chord[n]\n      output.send([0x80 + channel, note, 0], delay * 1000)\n    }\n  }\n\n  midi.stopAllNotes = function () {\n    output.cancel()\n    for (var channel = 0; channel < 16; channel++) {\n      output.send([0xB0 + channel, 0x7B, 0])\n    }\n  }\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi)\n    var errFunction = function (err) { // well at least we tried!\n      if (window.AudioContext) { // Chrome\n        opts.api = 'webaudio'\n      } else if (window.Audio) { // Firefox\n        opts.api = 'audiotag'\n      } else { // no support\n        return err\n      }\n      root.loadPlugin(opts)\n    }\n    // /\n    navigator.requestMIDIAccess().then(function (access) {\n      plugin = access\n      var pluginOutputs = plugin.outputs\n      if (typeof pluginOutputs === 'function') { // Chrome pre-43\n        output = pluginOutputs()[0]\n      } else { // Chrome post-43\n        output = pluginOutputs[0]\n      }\n      if (output === undefined) { // nothing there...\n        errFunction()\n      } else {\n        opts.onsuccess && opts.onsuccess()\n      }\n    }, errFunction)\n  }\n})()\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/.5.0.0@standard-loader!./src/plugins/webmidi.js\n **/"],"sourceRoot":""}